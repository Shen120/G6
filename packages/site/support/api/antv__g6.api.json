{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.39.1",
    "schemaVersion": 1011,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      },
      "reportUnsupportedHtmlElements": false
    }
  },
  "kind": "Package",
  "canonicalReference": "@antv/g6!",
  "docComment": "/**\n * G6 Core API\n *\n * @packageDocumentation\n */\n",
  "name": "@antv/g6",
  "preserveMemberOrder": false,
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@antv/g6!",
      "name": "",
      "preserveMemberOrder": false,
      "members": [
        {
          "kind": "Variable",
          "canonicalReference": "@antv/g6!_default:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "_default: "
            },
            {
              "kind": "Content",
              "text": "{\n    Graph: typeof "
            },
            {
              "kind": "Reference",
              "text": "Graph",
              "canonicalReference": "@antv/g6!Graph:class"
            },
            {
              "kind": "Content",
              "text": ";\n    Util: typeof "
            },
            {
              "kind": "Reference",
              "text": "Util",
              "canonicalReference": "@antv/g6!Util"
            },
            {
              "kind": "Content",
              "text": ";\n    stdLib: {\n        markers: {\n            collapse: (x: any, y: any, r: any) => any[][];\n            expand: (x: any, y: any, r: any) => any[][];\n            upTriangle: (x: any, y: any, r: any) => any[][];\n            downTriangle: (x: any, y: any, r: any) => any[][];\n        };\n    };\n    Extensions: {\n        ValidateData: (data: import(\"./types/data\")."
            },
            {
              "kind": "Reference",
              "text": "GraphDataChanges",
              "canonicalReference": "@antv/g6!~GraphDataChanges:interface"
            },
            {
              "kind": "Content",
              "text": ", options?: {}, graphCore?: import(\"./types\")."
            },
            {
              "kind": "Reference",
              "text": "GraphCore",
              "canonicalReference": "@antv/g6!GraphCore:type"
            },
            {
              "kind": "Content",
              "text": ") => import(\"./types/data\")."
            },
            {
              "kind": "Reference",
              "text": "GraphDataChanges",
              "canonicalReference": "@antv/g6!~GraphDataChanges:interface"
            },
            {
              "kind": "Content",
              "text": ";\n        TransformV4Data: (data: import(\"./types/data\")."
            },
            {
              "kind": "Reference",
              "text": "GraphDataChanges",
              "canonicalReference": "@antv/g6!~GraphDataChanges:interface"
            },
            {
              "kind": "Content",
              "text": ", options?: {}, graphCore?: import(\"./types\")."
            },
            {
              "kind": "Reference",
              "text": "GraphCore",
              "canonicalReference": "@antv/g6!GraphCore:type"
            },
            {
              "kind": "Content",
              "text": ") => import(\"./types/data\")."
            },
            {
              "kind": "Reference",
              "text": "GraphDataChanges",
              "canonicalReference": "@antv/g6!~GraphDataChanges:interface"
            },
            {
              "kind": "Content",
              "text": ";\n        MapNodeSize: (data: import(\"./types/data\")."
            },
            {
              "kind": "Reference",
              "text": "GraphDataChanges",
              "canonicalReference": "@antv/g6!~GraphDataChanges:interface"
            },
            {
              "kind": "Content",
              "text": ", options?: {\n            field?: string;\n            range?: [number, number];\n        }, graphCore?: import(\"./types\")."
            },
            {
              "kind": "Reference",
              "text": "GraphCore",
              "canonicalReference": "@antv/g6!GraphCore:type"
            },
            {
              "kind": "Content",
              "text": ") => import(\"./types/data\")."
            },
            {
              "kind": "Reference",
              "text": "GraphDataChanges",
              "canonicalReference": "@antv/g6!~GraphDataChanges:interface"
            },
            {
              "kind": "Content",
              "text": ";\n        ProcessParallelEdges: (data: import(\"./types/data\")."
            },
            {
              "kind": "Reference",
              "text": "GraphDataChanges",
              "canonicalReference": "@antv/g6!~GraphDataChanges:interface"
            },
            {
              "kind": "Content",
              "text": ", options?: {\n            edgeIds?: import(\"@antv/graphlib/lib/types\")."
            },
            {
              "kind": "Reference",
              "text": "ID",
              "canonicalReference": "@antv/graphlib!ID:type"
            },
            {
              "kind": "Content",
              "text": "[];\n            offsetDiff?: number;\n            multiEdgeType?: string;\n            singleEdgeType?: string;\n            loopEdgeType?: string;\n        }, graphCore?: import(\"./types\")."
            },
            {
              "kind": "Reference",
              "text": "GraphCore",
              "canonicalReference": "@antv/g6!GraphCore:type"
            },
            {
              "kind": "Content",
              "text": ") => import(\"./types/data\")."
            },
            {
              "kind": "Reference",
              "text": "GraphDataChanges",
              "canonicalReference": "@antv/g6!~GraphDataChanges:interface"
            },
            {
              "kind": "Content",
              "text": ";\n        LightTheme: import(\"./types\")."
            },
            {
              "kind": "Reference",
              "text": "ThemeSpecification",
              "canonicalReference": "@antv/g6!ThemeSpecification:interface"
            },
            {
              "kind": "Content",
              "text": ";\n        DarkTheme: import(\"./types\")."
            },
            {
              "kind": "Reference",
              "text": "ThemeSpecification",
              "canonicalReference": "@antv/g6!ThemeSpecification:interface"
            },
            {
              "kind": "Content",
              "text": ";\n        SpecThemeSolver: typeof import(\"./plugin/theme-solver\")."
            },
            {
              "kind": "Reference",
              "text": "SpecThemeSolver",
              "canonicalReference": "@antv/g6!~SpecThemeSolver:class"
            },
            {
              "kind": "Content",
              "text": ";\n        SubjectThemeSolver: typeof import(\"./plugin/theme-solver\")."
            },
            {
              "kind": "Reference",
              "text": "SubjectThemeSolver",
              "canonicalReference": "@antv/g6!~SubjectThemeSolver:class"
            },
            {
              "kind": "Content",
              "text": ";\n        ForceLayout: typeof import(\"@antv/layout\")."
            },
            {
              "kind": "Reference",
              "text": "ForceLayout",
              "canonicalReference": "@antv/layout!ForceLayout:class"
            },
            {
              "kind": "Content",
              "text": ";\n        GridLayout: typeof import(\"@antv/layout\")."
            },
            {
              "kind": "Reference",
              "text": "GridLayout",
              "canonicalReference": "@antv/layout!GridLayout:class"
            },
            {
              "kind": "Content",
              "text": ";\n        CircularLayout: typeof import(\"@antv/layout\")."
            },
            {
              "kind": "Reference",
              "text": "CircularLayout",
              "canonicalReference": "@antv/layout!CircularLayout:class"
            },
            {
              "kind": "Content",
              "text": ";\n        ConcentricLayout: typeof import(\"@antv/layout\")."
            },
            {
              "kind": "Reference",
              "text": "ConcentricLayout",
              "canonicalReference": "@antv/layout!ConcentricLayout:class"
            },
            {
              "kind": "Content",
              "text": ";\n        RandomLayout: typeof import(\"@antv/layout\")."
            },
            {
              "kind": "Reference",
              "text": "RandomLayout",
              "canonicalReference": "@antv/layout!RandomLayout:class"
            },
            {
              "kind": "Content",
              "text": ";\n        MDSLayout: typeof import(\"@antv/layout\")."
            },
            {
              "kind": "Reference",
              "text": "MDSLayout",
              "canonicalReference": "@antv/layout!MDSLayout:class"
            },
            {
              "kind": "Content",
              "text": ";\n        RadialLayout: typeof import(\"@antv/layout\")."
            },
            {
              "kind": "Reference",
              "text": "RadialLayout",
              "canonicalReference": "@antv/layout!RadialLayout:class"
            },
            {
              "kind": "Content",
              "text": ";\n        FruchtermanLayout: typeof import(\"@antv/layout\")."
            },
            {
              "kind": "Reference",
              "text": "FruchtermanLayout",
              "canonicalReference": "@antv/layout!FruchtermanLayout:class"
            },
            {
              "kind": "Content",
              "text": ";\n        D3ForceLayout: typeof import(\"@antv/layout\")."
            },
            {
              "kind": "Reference",
              "text": "D3ForceLayout",
              "canonicalReference": "@antv/layout!D3ForceLayout:class"
            },
            {
              "kind": "Content",
              "text": ";\n        ForceAtlas2Layout: typeof import(\"@antv/layout\")."
            },
            {
              "kind": "Reference",
              "text": "ForceAtlas2Layout",
              "canonicalReference": "@antv/layout!ForceAtlas2Layout:class"
            },
            {
              "kind": "Content",
              "text": ";\n        DagreLayout: typeof import(\"@antv/layout\")."
            },
            {
              "kind": "Reference",
              "text": "DagreLayout",
              "canonicalReference": "@antv/layout!DagreLayout:class"
            },
            {
              "kind": "Content",
              "text": ";\n        ComboCombinedLayout: typeof import(\"@antv/layout\")."
            },
            {
              "kind": "Reference",
              "text": "ComboCombinedLayout",
              "canonicalReference": "@antv/layout!ComboCombinedLayout:class"
            },
            {
              "kind": "Content",
              "text": ";\n        compactBox: any;\n        dendrogram: any;\n        indented: any;\n        mindmap: any;\n        CircleNode: typeof import(\"./plugin/item/node\")."
            },
            {
              "kind": "Reference",
              "text": "CircleNode",
              "canonicalReference": "@antv/g6!~CircleNode:class"
            },
            {
              "kind": "Content",
              "text": ";\n        RectNode: typeof import(\"./plugin/item/node\")."
            },
            {
              "kind": "Reference",
              "text": "RectNode",
              "canonicalReference": "@antv/g6!~RectNode:class"
            },
            {
              "kind": "Content",
              "text": ";\n        DiamondNode: typeof import(\"./plugin/item/node\")."
            },
            {
              "kind": "Reference",
              "text": "DiamondNode",
              "canonicalReference": "@antv/g6!~DiamondNode:class"
            },
            {
              "kind": "Content",
              "text": ";\n        DonutNode: typeof import(\"./plugin/item/node\")."
            },
            {
              "kind": "Reference",
              "text": "DonutNode",
              "canonicalReference": "@antv/g6!~DonutNode:class"
            },
            {
              "kind": "Content",
              "text": ";\n        SphereNode: typeof import(\"./plugin/item/node\")."
            },
            {
              "kind": "Reference",
              "text": "SphereNode",
              "canonicalReference": "@antv/g6!~SphereNode:class"
            },
            {
              "kind": "Content",
              "text": ";\n        StarNode: typeof import(\"./plugin/item/node\")."
            },
            {
              "kind": "Reference",
              "text": "StarNode",
              "canonicalReference": "@antv/g6!~StarNode:class"
            },
            {
              "kind": "Content",
              "text": ";\n        HexagonNode: typeof import(\"./plugin/item/node\")."
            },
            {
              "kind": "Reference",
              "text": "HexagonNode",
              "canonicalReference": "@antv/g6!~HexagonNode:class"
            },
            {
              "kind": "Content",
              "text": ";\n        TriangleNode: typeof import(\"./plugin/item/node\")."
            },
            {
              "kind": "Reference",
              "text": "TriangleNode",
              "canonicalReference": "@antv/g6!~TriangleNode:class"
            },
            {
              "kind": "Content",
              "text": ";\n        EllipseNode: typeof import(\"./plugin/item/node\")."
            },
            {
              "kind": "Reference",
              "text": "EllipseNode",
              "canonicalReference": "@antv/g6!~EllipseNode:class"
            },
            {
              "kind": "Content",
              "text": ";\n        ModelRectNode: typeof import(\"./plugin/item/node\")."
            },
            {
              "kind": "Reference",
              "text": "ModelRectNode",
              "canonicalReference": "@antv/g6!~ModelRectNode:class"
            },
            {
              "kind": "Content",
              "text": ";\n        CubeNode: typeof import(\"./plugin/item/node\")."
            },
            {
              "kind": "Reference",
              "text": "CubeNode",
              "canonicalReference": "@antv/g6!~CubeNode:class"
            },
            {
              "kind": "Content",
              "text": ";\n        PlaneNode: typeof import(\"./plugin/item/node\")."
            },
            {
              "kind": "Reference",
              "text": "PlaneNode",
              "canonicalReference": "@antv/g6!~PlaneNode:class"
            },
            {
              "kind": "Content",
              "text": ";\n        BaseNode: typeof import(\"./plugin/item/node\")."
            },
            {
              "kind": "Reference",
              "text": "BaseNode",
              "canonicalReference": "@antv/g6!~BaseNode:class"
            },
            {
              "kind": "Content",
              "text": ";\n        BaseNode3D: typeof import(\"./plugin/item/node\")."
            },
            {
              "kind": "Reference",
              "text": "BaseNode3D",
              "canonicalReference": "@antv/g6!~BaseNode3D:class"
            },
            {
              "kind": "Content",
              "text": ";\n        LineEdge: typeof import(\"./plugin/item/edge\")."
            },
            {
              "kind": "Reference",
              "text": "LineEdge",
              "canonicalReference": "@antv/g6!~LineEdge:class"
            },
            {
              "kind": "Content",
              "text": ";\n        CubicEdge: typeof import(\"./plugin/item/edge\")."
            },
            {
              "kind": "Reference",
              "text": "CubicEdge",
              "canonicalReference": "@antv/g6!~CubicEdge:class"
            },
            {
              "kind": "Content",
              "text": ";\n        CubicHorizontalEdge: typeof import(\"./plugin/item/edge\")."
            },
            {
              "kind": "Reference",
              "text": "CubicHorizontalEdge",
              "canonicalReference": "@antv/g6!~CubicHorizontalEdge:class"
            },
            {
              "kind": "Content",
              "text": ";\n        CubicVerticalEdge: typeof import(\"./plugin/item/edge\")."
            },
            {
              "kind": "Reference",
              "text": "CubicVerticalEdge",
              "canonicalReference": "@antv/g6!~CubicVerticalEdge:class"
            },
            {
              "kind": "Content",
              "text": ";\n        LoopEdge: typeof import(\"./plugin/item/edge\")."
            },
            {
              "kind": "Reference",
              "text": "LoopEdge",
              "canonicalReference": "@antv/g6!~LoopEdge:class"
            },
            {
              "kind": "Content",
              "text": ";\n        PolylineEdge: typeof import(\"./plugin/item/edge\")."
            },
            {
              "kind": "Reference",
              "text": "PolylineEdge",
              "canonicalReference": "@antv/g6!~PolylineEdge:class"
            },
            {
              "kind": "Content",
              "text": ";\n        QuadraticEdge: typeof import(\"./plugin/item/edge\")."
            },
            {
              "kind": "Reference",
              "text": "QuadraticEdge",
              "canonicalReference": "@antv/g6!~QuadraticEdge:class"
            },
            {
              "kind": "Content",
              "text": ";\n        CircleCombo: typeof import(\"./plugin/item/combo\")."
            },
            {
              "kind": "Reference",
              "text": "CircleCombo",
              "canonicalReference": "@antv/g6!~CircleCombo:class"
            },
            {
              "kind": "Content",
              "text": ";\n        RectCombo: typeof import(\"./plugin/item/combo\")."
            },
            {
              "kind": "Reference",
              "text": "RectCombo",
              "canonicalReference": "@antv/g6!~RectCombo:class"
            },
            {
              "kind": "Content",
              "text": ";\n        BaseBehavior: typeof import(\"./types\")."
            },
            {
              "kind": "Reference",
              "text": "Behavior",
              "canonicalReference": "@antv/g6!Behavior:class"
            },
            {
              "kind": "Content",
              "text": ";\n        ActivateRelations: typeof import(\"./plugin/behavior\")."
            },
            {
              "kind": "Reference",
              "text": "ActivateRelations",
              "canonicalReference": "@antv/g6!~ActivateRelations:class"
            },
            {
              "kind": "Content",
              "text": ";\n        BrushSelect: typeof import(\"./plugin/behavior\")."
            },
            {
              "kind": "Reference",
              "text": "BrushSelect",
              "canonicalReference": "@antv/g6!~BrushSelect:class"
            },
            {
              "kind": "Content",
              "text": ";\n        HoverActivate: typeof import(\"./plugin/behavior\")."
            },
            {
              "kind": "Reference",
              "text": "HoverActivate",
              "canonicalReference": "@antv/g6!~HoverActivate:class"
            },
            {
              "kind": "Content",
              "text": ";\n        LassoSelect: typeof import(\"./plugin/behavior\")."
            },
            {
              "kind": "Reference",
              "text": "LassoSelect",
              "canonicalReference": "@antv/g6!~LassoSelect:class"
            },
            {
              "kind": "Content",
              "text": ";\n        OrbitCanvas3D: typeof import(\"./plugin/behavior\")."
            },
            {
              "kind": "Reference",
              "text": "OrbitCanvas3D",
              "canonicalReference": "@antv/g6!~OrbitCanvas3D:class"
            },
            {
              "kind": "Content",
              "text": ";\n        RotateCanvas3D: typeof import(\"./plugin/behavior\")."
            },
            {
              "kind": "Reference",
              "text": "RotateCanvas3D",
              "canonicalReference": "@antv/g6!~RotateCanvas3D:class"
            },
            {
              "kind": "Content",
              "text": ";\n        TrackCanvas3D: typeof import(\"./plugin/behavior\")."
            },
            {
              "kind": "Reference",
              "text": "TrackCanvas3D",
              "canonicalReference": "@antv/g6!~TrackCanvas3D:class"
            },
            {
              "kind": "Content",
              "text": ";\n        ZoomCanvas3D: typeof import(\"./plugin/behavior\")."
            },
            {
              "kind": "Reference",
              "text": "ZoomCanvas3D",
              "canonicalReference": "@antv/g6!~ZoomCanvas3D:class"
            },
            {
              "kind": "Content",
              "text": ";\n        ZoomCanvas: typeof import(\"./plugin/behavior\")."
            },
            {
              "kind": "Reference",
              "text": "ZoomCanvas",
              "canonicalReference": "@antv/g6!~ZoomCanvas:class"
            },
            {
              "kind": "Content",
              "text": ";\n        DragCanvas: typeof import(\"./plugin/behavior\")."
            },
            {
              "kind": "Reference",
              "text": "DragCanvas",
              "canonicalReference": "@antv/g6!~DragCanvas:class"
            },
            {
              "kind": "Content",
              "text": ";\n        CollapseExpandTree: typeof import(\"./plugin/behavior\")."
            },
            {
              "kind": "Reference",
              "text": "CollapseExpandTree",
              "canonicalReference": "@antv/g6!~CollapseExpandTree:class"
            },
            {
              "kind": "Content",
              "text": ";\n        CollapseExpandCombo: typeof import(\"./plugin/behavior\")."
            },
            {
              "kind": "Reference",
              "text": "CollapseExpandCombo",
              "canonicalReference": "@antv/g6!~CollapseExpandCombo:class"
            },
            {
              "kind": "Content",
              "text": ";\n        DragNode: typeof import(\"./plugin/behavior\")."
            },
            {
              "kind": "Reference",
              "text": "DragNode",
              "canonicalReference": "@antv/g6!~DragNode:class"
            },
            {
              "kind": "Content",
              "text": ";\n        DragCombo: typeof import(\"./plugin/behavior\")."
            },
            {
              "kind": "Reference",
              "text": "DragCombo",
              "canonicalReference": "@antv/g6!~DragCombo:class"
            },
            {
              "kind": "Content",
              "text": ";\n        CreateEdge: typeof import(\"./plugin/behavior\")."
            },
            {
              "kind": "Reference",
              "text": "CreateEdge",
              "canonicalReference": "@antv/g6!~CreateEdge:class"
            },
            {
              "kind": "Content",
              "text": ";\n        ShortcutsCall: typeof import(\"./plugin/behavior\")."
            },
            {
              "kind": "Reference",
              "text": "ShortcutsCall",
              "canonicalReference": "@antv/g6!~ShortcutsCall:class"
            },
            {
              "kind": "Content",
              "text": ";\n        ScrollCanvas: typeof import(\"./plugin/behavior\")."
            },
            {
              "kind": "Reference",
              "text": "ScrollCanvas",
              "canonicalReference": "@antv/g6!~ScrollCanvas:class"
            },
            {
              "kind": "Content",
              "text": ";\n        BasePlugin: typeof import(\"./types\")."
            },
            {
              "kind": "Reference",
              "text": "PluginBase",
              "canonicalReference": "@antv/g6!PluginBase:class"
            },
            {
              "kind": "Content",
              "text": ";\n        History: {\n            new (): "
            },
            {
              "kind": "Reference",
              "text": "History",
              "canonicalReference": "!History:interface"
            },
            {
              "kind": "Content",
              "text": ";\n            prototype: "
            },
            {
              "kind": "Reference",
              "text": "History",
              "canonicalReference": "!History:interface"
            },
            {
              "kind": "Content",
              "text": ";\n        };\n        LodController: typeof import(\"./plugin/widget\")."
            },
            {
              "kind": "Reference",
              "text": "LodController",
              "canonicalReference": "@antv/g6!~LodController:class"
            },
            {
              "kind": "Content",
              "text": ";\n        Toolbar: typeof import(\"./plugin/widget\")."
            },
            {
              "kind": "Reference",
              "text": "Toolbar",
              "canonicalReference": "@antv/g6!~Toolbar:class"
            },
            {
              "kind": "Content",
              "text": ";\n        Tooltip: typeof import(\"./plugin/widget\")."
            },
            {
              "kind": "Reference",
              "text": "Tooltip",
              "canonicalReference": "@antv/g6!~Tooltip:class"
            },
            {
              "kind": "Content",
              "text": ";\n        Minimap: typeof import(\"./plugin/widget\")."
            },
            {
              "kind": "Reference",
              "text": "Minimap",
              "canonicalReference": "@antv/g6!~Minimap:class"
            },
            {
              "kind": "Content",
              "text": ";\n        Grid: typeof import(\"./plugin/widget\")."
            },
            {
              "kind": "Reference",
              "text": "Grid",
              "canonicalReference": "@antv/g6!~Grid:class"
            },
            {
              "kind": "Content",
              "text": ";\n        Menu: typeof import(\"./plugin/widget\")."
            },
            {
              "kind": "Reference",
              "text": "Menu",
              "canonicalReference": "@antv/g6!~Menu:class"
            },
            {
              "kind": "Content",
              "text": ";\n        Fisheye: typeof import(\"./plugin/widget\")."
            },
            {
              "kind": "Reference",
              "text": "Fisheye",
              "canonicalReference": "@antv/g6!~Fisheye:class"
            },
            {
              "kind": "Content",
              "text": ";\n        Legend: typeof import(\"./plugin/widget\")."
            },
            {
              "kind": "Reference",
              "text": "Legend",
              "canonicalReference": "@antv/g6!~Legend:class"
            },
            {
              "kind": "Content",
              "text": ";\n        Timebar: typeof import(\"./plugin/widget\")."
            },
            {
              "kind": "Reference",
              "text": "Timebar",
              "canonicalReference": "@antv/g6!~Timebar:class"
            },
            {
              "kind": "Content",
              "text": ";\n        Hull: typeof import(\"./plugin/widget/hull\")."
            },
            {
              "kind": "Reference",
              "text": "default",
              "canonicalReference": "@antv/g6!~Hull:class"
            },
            {
              "kind": "Content",
              "text": ";\n        Snapline: typeof import(\"./plugin/widget\")."
            },
            {
              "kind": "Reference",
              "text": "Snapline",
              "canonicalReference": "@antv/g6!~Snapline:class"
            },
            {
              "kind": "Content",
              "text": ";\n        EdgeFilterLens: typeof import(\"./plugin/widget\")."
            },
            {
              "kind": "Reference",
              "text": "EdgeFilterLens",
              "canonicalReference": "@antv/g6!~EdgeFilterLens:class"
            },
            {
              "kind": "Content",
              "text": ";\n        WaterMarker: typeof import(\"./plugin/widget/watermarker\")."
            },
            {
              "kind": "Reference",
              "text": "WaterMarker",
              "canonicalReference": "@antv/g6!~WaterMarker:class"
            },
            {
              "kind": "Content",
              "text": ";\n        EdgeBundling: typeof import(\"./plugin/widget\")."
            },
            {
              "kind": "Reference",
              "text": "EdgeBundling",
              "canonicalReference": "@antv/g6!~EdgeBundling:class"
            },
            {
              "kind": "Content",
              "text": ";\n    };\n    version: string;\n    register: any;\n    unregister: any;\n    getRegisterPlugins: any;\n    getRegisterPlugin: any;\n}"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "_default",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 180
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@antv/g6!AnimateCfg:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface AnimateCfg "
            }
          ],
          "fileUrlPath": "lib/types/animate.d.ts",
          "releaseTag": "Public",
          "name": "AnimateCfg",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!AnimateCfg#callback:member",
              "docComment": "/**\n * Called after the animation is finished.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "callback?: "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "callback",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!AnimateCfg#delay:member",
              "docComment": "/**\n * Delay of the animation.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "delay?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "delay",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!AnimateCfg#duration:member",
              "docComment": "/**\n * Duration of one animation.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "duration?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "duration",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!AnimateCfg#easing:member",
              "docComment": "/**\n * Easing function.  @type {string}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "easing?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "easing",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!AnimateCfg#iterations:member",
              "docComment": "/**\n * Iteration number for the animation, Infinity means repeat.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "iterations?: "
                },
                {
                  "kind": "Content",
                  "text": "number | typeof "
                },
                {
                  "kind": "Reference",
                  "text": "Infinity",
                  "canonicalReference": "!Infinity:var"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "iterations",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!AnimateCfg#pauseCallback:member",
              "docComment": "/**\n * Called after the animation is paused.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pauseCallback?: "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "pauseCallback",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!AnimateCfg#resumeCallback:member",
              "docComment": "/**\n * Called after the animation is resumed.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "resumeCallback?: "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "resumeCallback",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@antv/g6!AnimateTiming:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type AnimateTiming = "
            },
            {
              "kind": "Content",
              "text": "'buildIn' | 'buildOut' | 'show' | 'hide' | 'update'"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/animate.d.ts",
          "releaseTag": "Public",
          "name": "AnimateTiming",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@antv/g6!Behavior:class",
          "docComment": "/**\n * Base behavior. TODO: Support spec mode.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class Behavior "
            }
          ],
          "fileUrlPath": "lib/types/behavior.d.ts",
          "releaseTag": "Public",
          "isAbstract": true,
          "name": "Behavior",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@antv/g6!Behavior:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `Behavior` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(options: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Behavior#destroy:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "destroy(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "destroy"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Behavior#getEvents:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract getEvents(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [eventName: string]: (event: "
                },
                {
                  "kind": "Reference",
                  "text": "IG6GraphEvent",
                  "canonicalReference": "@antv/g6!IG6GraphEvent:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => void;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": true,
              "name": "getEvents"
            },
            {
              "kind": "Property",
              "canonicalReference": "@antv/g6!Behavior#graph:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "graph: "
                },
                {
                  "kind": "Reference",
                  "text": "Graph",
                  "canonicalReference": "@antv/g6!Graph:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "graph",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@antv/g6!Behavior#options:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "options: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "options",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@antv/g6!Behavior.type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static type: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@antv/g6!Behavior#updateConfig:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "updateConfig: "
                },
                {
                  "kind": "Content",
                  "text": "(options: any) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "updateConfig",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@antv/g6!BehaviorOptionsOf:type",
          "docComment": "/**\n * Type gymnastics, input registry table, output configure type.\n *\n * @example\n *\n * BehaviorOptionsOf<{ 'drag-node': typeof DragNodeBehavior }> // 'drag-node' | { type: 'drag-node', key?: 'ctrl' | 'shift' }\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type BehaviorOptionsOf<B extends "
            },
            {
              "kind": "Reference",
              "text": "BehaviorRegistry",
              "canonicalReference": "@antv/g6!BehaviorRegistry:interface"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Content",
              "text": "{}"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Reference",
              "text": "Extract",
              "canonicalReference": "!Extract:type"
            },
            {
              "kind": "Content",
              "text": "<keyof B, string> | {\n    [K in keyof B]: B[K] extends {\n        new (options: infer O): any;\n    } ? {\n        type: K;\n        key: string;\n    } & O : {\n        type: K;\n        key: string;\n    };\n}["
            },
            {
              "kind": "Reference",
              "text": "Extract",
              "canonicalReference": "!Extract:type"
            },
            {
              "kind": "Content",
              "text": "<keyof B, string>]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/behavior.d.ts",
          "releaseTag": "Public",
          "name": "BehaviorOptionsOf",
          "typeParameters": [
            {
              "typeParameterName": "B",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 5,
            "endIndex": 9
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@antv/g6!BehaviorRegistry:interface",
          "docComment": "/**\n * Behavior registry table.\n *\n * @example\n *\n * { 'drag-node': DragNodeBehavior, 'my-drag-node': MyDragNodeBehavior }\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface BehaviorRegistry "
            }
          ],
          "fileUrlPath": "lib/types/behavior.d.ts",
          "releaseTag": "Public",
          "name": "BehaviorRegistry",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "IndexSignature",
              "canonicalReference": "@antv/g6!BehaviorRegistry:index(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "[type: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "]: "
                },
                {
                  "kind": "Content",
                  "text": "typeof "
                },
                {
                  "kind": "Reference",
                  "text": "Behavior",
                  "canonicalReference": "@antv/g6!Behavior:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "type",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@antv/g6!ComboDisplayModel:type",
          "docComment": "/**\n * Displayed model, only for drawing and not received by users.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ComboDisplayModel = "
            },
            {
              "kind": "Reference",
              "text": "GNode",
              "canonicalReference": "@antv/graphlib!Node:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ComboDisplayModelData",
              "canonicalReference": "@antv/g6!~ComboDisplayModelData:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/combo.d.ts",
          "releaseTag": "Public",
          "name": "ComboDisplayModel",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@antv/g6!ComboLabelPosition:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ComboLabelPosition = "
            },
            {
              "kind": "Content",
              "text": "'bottom' | 'center' | 'top' | 'left' | 'left-top' | 'right' | 'outside-top' | 'outside-left' | 'outside-right' | 'outside-bottom'"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/combo.d.ts",
          "releaseTag": "Public",
          "name": "ComboLabelPosition",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@antv/g6!ComboModel:type",
          "docComment": "/**\n * Inner node model, clone and transform from user data.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ComboModel = "
            },
            {
              "kind": "Reference",
              "text": "GNode",
              "canonicalReference": "@antv/graphlib!Node:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ComboModelData",
              "canonicalReference": "@antv/g6!ComboModelData:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/combo.d.ts",
          "releaseTag": "Public",
          "name": "ComboModel",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@antv/g6!ComboModelData:interface",
          "docComment": "/**\n * Inner combo data, clone and transform from user data.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ComboModelData extends "
            },
            {
              "kind": "Reference",
              "text": "ComboUserModelData",
              "canonicalReference": "@antv/g6!~ComboUserModelData:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "lib/types/combo.d.ts",
          "releaseTag": "Public",
          "name": "ComboModelData",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!ComboModelData#anchorPoints:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "anchorPoints?: "
                },
                {
                  "kind": "Content",
                  "text": "number[][]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "anchorPoints",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!ComboModelData#fixSize:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fixSize?: "
                },
                {
                  "kind": "Content",
                  "text": "number | number[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "fixSize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!ComboModelData#label:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "label?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "label",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!ComboModelData#padding:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "padding?: "
                },
                {
                  "kind": "Reference",
                  "text": "Padding",
                  "canonicalReference": "@antv/g6!~Padding:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "padding",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!ComboModelData#visible:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "visible?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "visible",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@antv/g6!ComboShapesEncode:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ComboShapesEncode extends "
            },
            {
              "kind": "Reference",
              "text": "ShapesEncode",
              "canonicalReference": "@antv/g6!~ShapesEncode:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "lib/types/combo.d.ts",
          "releaseTag": "Public",
          "name": "ComboShapesEncode",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!ComboShapesEncode#anchorPoints:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "anchorPoints?: "
                },
                {
                  "kind": "Content",
                  "text": "number[][] | "
                },
                {
                  "kind": "Reference",
                  "text": "Encode",
                  "canonicalReference": "@antv/g6!~Encode:interface"
                },
                {
                  "kind": "Content",
                  "text": "<number[][]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "anchorPoints",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!ComboShapesEncode#fixSize:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fixSize?: "
                },
                {
                  "kind": "Content",
                  "text": "number | number[] | "
                },
                {
                  "kind": "Reference",
                  "text": "Encode",
                  "canonicalReference": "@antv/g6!~Encode:interface"
                },
                {
                  "kind": "Content",
                  "text": "<number | number[]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "fixSize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!ComboShapesEncode#labelShape:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "labelShape?: "
                },
                {
                  "kind": "Reference",
                  "text": "ComboLabelShapeAttrEncode",
                  "canonicalReference": "@antv/g6!~ComboLabelShapeAttrEncode:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "labelShape",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!ComboShapesEncode#padding:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "padding?: "
                },
                {
                  "kind": "Reference",
                  "text": "Padding",
                  "canonicalReference": "@antv/g6!~Padding:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "Encode",
                  "canonicalReference": "@antv/g6!~Encode:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Padding",
                  "canonicalReference": "@antv/g6!~Padding:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "padding",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@antv/g6!ComboShapeStyles:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ComboShapeStyles extends "
            },
            {
              "kind": "Reference",
              "text": "ItemShapeStyles",
              "canonicalReference": "@antv/g6!~ItemShapeStyles:type"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "lib/types/combo.d.ts",
          "releaseTag": "Public",
          "name": "ComboShapeStyles",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!ComboShapeStyles#anchorShapes:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "anchorShapes?: "
                },
                {
                  "kind": "Reference",
                  "text": "ShapeStyle",
                  "canonicalReference": "@antv/g6!~ShapeStyle:type"
                },
                {
                  "kind": "Content",
                  "text": " & {\n        color?: string;\n        textColor?: string;\n        size?: number;\n        offsetX?: number;\n        offsetY?: number;\n        offsetZ?: number;\n        [key: number]: "
                },
                {
                  "kind": "Reference",
                  "text": "ShapeStyle",
                  "canonicalReference": "@antv/g6!~ShapeStyle:type"
                },
                {
                  "kind": "Content",
                  "text": " & {\n            position?: "
                },
                {
                  "kind": "Reference",
                  "text": "BadgePosition",
                  "canonicalReference": "@antv/g6!~BadgePosition:enum"
                },
                {
                  "kind": "Content",
                  "text": ";\n            color?: string;\n            textColor?: string;\n            size?: number;\n            offsetX?: number;\n            offsetY?: number;\n            offsetZ?: number;\n        };\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "anchorShapes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!ComboShapeStyles#badgeShapes:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "badgeShapes?: "
                },
                {
                  "kind": "Reference",
                  "text": "ShapeStyle",
                  "canonicalReference": "@antv/g6!~ShapeStyle:type"
                },
                {
                  "kind": "Content",
                  "text": " & {\n        color?: string;\n        textColor?: string;\n        palette?: string[];\n        [key: number]: "
                },
                {
                  "kind": "Reference",
                  "text": "ShapeStyle",
                  "canonicalReference": "@antv/g6!~ShapeStyle:type"
                },
                {
                  "kind": "Content",
                  "text": " & {\n            position?: "
                },
                {
                  "kind": "Reference",
                  "text": "BadgePosition",
                  "canonicalReference": "@antv/g6!~BadgePosition:enum"
                },
                {
                  "kind": "Content",
                  "text": ";\n            color?: string;\n            textColor?: string;\n        };\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "badgeShapes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!ComboShapeStyles#iconShape:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "iconShape?: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TextStyleProps",
                  "canonicalReference": "@antv/gui!TextStyleProps:type"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "ImageStyleProps",
                  "canonicalReference": "@antv/gui!ImageStyleProps:type"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "ShapeStyle",
                  "canonicalReference": "@antv/g6!~ShapeStyle:type"
                },
                {
                  "kind": "Content",
                  "text": " & {\n        offsetX?: number;\n        offsetY?: number;\n        lod?: number;\n        contentType?: 'auto' | 'childCount';\n    }>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "iconShape",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!ComboShapeStyles#keyShape:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "keyShape?: "
                },
                {
                  "kind": "Reference",
                  "text": "ShapeStyle",
                  "canonicalReference": "@antv/g6!~ShapeStyle:type"
                },
                {
                  "kind": "Content",
                  "text": " & {\n        padding?: number | number[];\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "keyShape",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!ComboShapeStyles#labelBackgroundShape:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "labelBackgroundShape?: "
                },
                {
                  "kind": "Reference",
                  "text": "ShapeStyle",
                  "canonicalReference": "@antv/g6!~ShapeStyle:type"
                },
                {
                  "kind": "Content",
                  "text": " & {\n        padding?: number | number[];\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "labelBackgroundShape",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!ComboShapeStyles#labelShape:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "labelShape?: "
                },
                {
                  "kind": "Reference",
                  "text": "ShapeStyle",
                  "canonicalReference": "@antv/g6!~ShapeStyle:type"
                },
                {
                  "kind": "Content",
                  "text": " & {\n        position?: "
                },
                {
                  "kind": "Reference",
                  "text": "ComboLabelPosition",
                  "canonicalReference": "@antv/g6!ComboLabelPosition:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        offsetX?: number;\n        offsetY?: number;\n        offsetZ?: number;\n        maxWidth?: string | number;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "labelShape",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@antv/g6!ComboUserModel:type",
          "docComment": "/**\n * User input model.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ComboUserModel = "
            },
            {
              "kind": "Reference",
              "text": "GNode",
              "canonicalReference": "@antv/graphlib!Node:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ComboUserModelData",
              "canonicalReference": "@antv/g6!~ComboUserModelData:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/combo.d.ts",
          "releaseTag": "Public",
          "name": "ComboUserModel",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@antv/g6!DataConfig:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DataConfig = "
            },
            {
              "kind": "Reference",
              "text": "GraphData",
              "canonicalReference": "@antv/g6!GraphData:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "InlineGraphDataConfig",
              "canonicalReference": "@antv/g6!~InlineGraphDataConfig:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "InlineTreeDataConfig",
              "canonicalReference": "@antv/g6!~InlineTreeDataConfig:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "FetchDataConfig",
              "canonicalReference": "@antv/g6!~FetchDataConfig:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/data.d.ts",
          "releaseTag": "Public",
          "name": "DataConfig",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@antv/g6!DisplayGraphCore:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DisplayGraphCore = "
            },
            {
              "kind": "Reference",
              "text": "GraphLib",
              "canonicalReference": "@antv/graphlib!Graph:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "NodeDisplayModelData",
              "canonicalReference": "@antv/g6!~NodeDisplayModelData:type"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "EdgeDisplayModelData",
              "canonicalReference": "@antv/g6!~EdgeDisplayModelData:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/data.d.ts",
          "releaseTag": "Public",
          "name": "DisplayGraphCore",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@antv/g6!EdgeDisplayModel:type",
          "docComment": "/**\n * Displayed data, only for drawing and not received by users.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type EdgeDisplayModel = "
            },
            {
              "kind": "Reference",
              "text": "GEdge",
              "canonicalReference": "@antv/graphlib!Edge:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "EdgeDisplayModelData",
              "canonicalReference": "@antv/g6!~EdgeDisplayModelData:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/edge.d.ts",
          "releaseTag": "Public",
          "name": "EdgeDisplayModel",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@antv/g6!EdgeLabelPosition:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type EdgeLabelPosition = "
            },
            {
              "kind": "Content",
              "text": "'start' | 'middle' | 'end'"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/edge.d.ts",
          "releaseTag": "Public",
          "name": "EdgeLabelPosition",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@antv/g6!EdgeModel:type",
          "docComment": "/**\n * Inner node data, clone and transform from user data.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type EdgeModel = "
            },
            {
              "kind": "Reference",
              "text": "GEdge",
              "canonicalReference": "@antv/graphlib!Edge:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "EdgeModelData",
              "canonicalReference": "@antv/g6!EdgeModelData:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/edge.d.ts",
          "releaseTag": "Public",
          "name": "EdgeModel",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@antv/g6!EdgeModelData:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type EdgeModelData = "
            },
            {
              "kind": "Reference",
              "text": "EdgeUserModelData",
              "canonicalReference": "@antv/g6!~EdgeUserModelData:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/edge.d.ts",
          "releaseTag": "Public",
          "name": "EdgeModelData",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@antv/g6!EdgeShapesEncode:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface EdgeShapesEncode extends "
            },
            {
              "kind": "Reference",
              "text": "ShapesEncode",
              "canonicalReference": "@antv/g6!~ShapesEncode:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "lib/types/edge.d.ts",
          "releaseTag": "Public",
          "name": "EdgeShapesEncode",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!EdgeShapesEncode#badgeShape:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "badgeShape?: "
                },
                {
                  "kind": "Reference",
                  "text": "ShapeAttrEncode",
                  "canonicalReference": "@antv/g6!~ShapeAttrEncode:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "Encode",
                  "canonicalReference": "@antv/g6!~Encode:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ShapeStyle",
                  "canonicalReference": "@antv/g6!~ShapeStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "badgeShape",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!EdgeShapesEncode#labelBackgroundShape:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "labelBackgroundShape?: "
                },
                {
                  "kind": "Reference",
                  "text": "LabelBackground",
                  "canonicalReference": "@antv/g6!~LabelBackground:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "Encode",
                  "canonicalReference": "@antv/g6!~Encode:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "LabelBackground",
                  "canonicalReference": "@antv/g6!~LabelBackground:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "labelBackgroundShape",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!EdgeShapesEncode#labelShape:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "labelShape?: "
                },
                {
                  "kind": "Reference",
                  "text": "EdgeLabelShapeAttrEncode",
                  "canonicalReference": "@antv/g6!~EdgeLabelShapeAttrEncode:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "labelShape",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@antv/g6!EdgeShapeStyles:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface EdgeShapeStyles extends "
            },
            {
              "kind": "Reference",
              "text": "ItemShapeStyles",
              "canonicalReference": "@antv/g6!~ItemShapeStyles:type"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "lib/types/edge.d.ts",
          "releaseTag": "Public",
          "name": "EdgeShapeStyles",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!EdgeShapeStyles#badgeShape:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "badgeShape?: "
                },
                {
                  "kind": "Reference",
                  "text": "ShapeStyle",
                  "canonicalReference": "@antv/g6!~ShapeStyle:type"
                },
                {
                  "kind": "Content",
                  "text": " & {\n        color?: string;\n        textColor?: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "badgeShape",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!EdgeShapeStyles#keyShape:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "keyShape?: "
                },
                {
                  "kind": "Reference",
                  "text": "ShapeStyle",
                  "canonicalReference": "@antv/g6!~ShapeStyle:type"
                },
                {
                  "kind": "Content",
                  "text": " & {\n        startArrow?: boolean | "
                },
                {
                  "kind": "Reference",
                  "text": "ArrowStyle",
                  "canonicalReference": "@antv/g6!~ArrowStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        endArrow?: boolean | "
                },
                {
                  "kind": "Reference",
                  "text": "ArrowStyle",
                  "canonicalReference": "@antv/g6!~ArrowStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "keyShape",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!EdgeShapeStyles#labelBackgroundShape:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "labelBackgroundShape?: "
                },
                {
                  "kind": "Reference",
                  "text": "ShapeStyle",
                  "canonicalReference": "@antv/g6!~ShapeStyle:type"
                },
                {
                  "kind": "Content",
                  "text": " & {\n        padding?: number | number[];\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "labelBackgroundShape",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!EdgeShapeStyles#labelShape:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "labelShape?: "
                },
                {
                  "kind": "Reference",
                  "text": "ShapeStyle",
                  "canonicalReference": "@antv/g6!~ShapeStyle:type"
                },
                {
                  "kind": "Content",
                  "text": " & {\n        position?: 'start' | 'middle' | 'end';\n        offsetX?: number;\n        offsetY?: number;\n        offsetZ?: number;\n        autoRotate?: boolean;\n        maxWidth?: string | number;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "labelShape",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@antv/g6!EdgeUserModel:type",
          "docComment": "/**\n * User input data.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type EdgeUserModel = "
            },
            {
              "kind": "Reference",
              "text": "GEdge",
              "canonicalReference": "@antv/graphlib!Edge:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "EdgeUserModelData",
              "canonicalReference": "@antv/g6!~EdgeUserModelData:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/edge.d.ts",
          "releaseTag": "Public",
          "name": "EdgeUserModel",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@antv/g6!Extensions:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "Extensions: "
            },
            {
              "kind": "Content",
              "text": "{\n    ValidateData: (data: import(\"../types/data\")."
            },
            {
              "kind": "Reference",
              "text": "GraphDataChanges",
              "canonicalReference": "@antv/g6!~GraphDataChanges:interface"
            },
            {
              "kind": "Content",
              "text": ", options?: {}, graphCore?: import(\"..\")."
            },
            {
              "kind": "Reference",
              "text": "GraphCore",
              "canonicalReference": "@antv/g6!GraphCore:type"
            },
            {
              "kind": "Content",
              "text": ") => import(\"../types/data\")."
            },
            {
              "kind": "Reference",
              "text": "GraphDataChanges",
              "canonicalReference": "@antv/g6!~GraphDataChanges:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    TransformV4Data: (data: import(\"../types/data\")."
            },
            {
              "kind": "Reference",
              "text": "GraphDataChanges",
              "canonicalReference": "@antv/g6!~GraphDataChanges:interface"
            },
            {
              "kind": "Content",
              "text": ", options?: {}, graphCore?: import(\"..\")."
            },
            {
              "kind": "Reference",
              "text": "GraphCore",
              "canonicalReference": "@antv/g6!GraphCore:type"
            },
            {
              "kind": "Content",
              "text": ") => import(\"../types/data\")."
            },
            {
              "kind": "Reference",
              "text": "GraphDataChanges",
              "canonicalReference": "@antv/g6!~GraphDataChanges:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    MapNodeSize: (data: import(\"../types/data\")."
            },
            {
              "kind": "Reference",
              "text": "GraphDataChanges",
              "canonicalReference": "@antv/g6!~GraphDataChanges:interface"
            },
            {
              "kind": "Content",
              "text": ", options?: {\n        field?: string;\n        range?: [number, number];\n    }, graphCore?: import(\"..\")."
            },
            {
              "kind": "Reference",
              "text": "GraphCore",
              "canonicalReference": "@antv/g6!GraphCore:type"
            },
            {
              "kind": "Content",
              "text": ") => import(\"../types/data\")."
            },
            {
              "kind": "Reference",
              "text": "GraphDataChanges",
              "canonicalReference": "@antv/g6!~GraphDataChanges:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    ProcessParallelEdges: (data: import(\"../types/data\")."
            },
            {
              "kind": "Reference",
              "text": "GraphDataChanges",
              "canonicalReference": "@antv/g6!~GraphDataChanges:interface"
            },
            {
              "kind": "Content",
              "text": ", options?: {\n        edgeIds?: import(\"@antv/graphlib\")."
            },
            {
              "kind": "Reference",
              "text": "ID",
              "canonicalReference": "@antv/graphlib!ID:type"
            },
            {
              "kind": "Content",
              "text": "[];\n        offsetDiff?: number;\n        multiEdgeType?: string;\n        singleEdgeType?: string;\n        loopEdgeType?: string;\n    }, graphCore?: import(\"..\")."
            },
            {
              "kind": "Reference",
              "text": "GraphCore",
              "canonicalReference": "@antv/g6!GraphCore:type"
            },
            {
              "kind": "Content",
              "text": ") => import(\"../types/data\")."
            },
            {
              "kind": "Reference",
              "text": "GraphDataChanges",
              "canonicalReference": "@antv/g6!~GraphDataChanges:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    LightTheme: import(\"..\")."
            },
            {
              "kind": "Reference",
              "text": "ThemeSpecification",
              "canonicalReference": "@antv/g6!ThemeSpecification:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    DarkTheme: import(\"..\")."
            },
            {
              "kind": "Reference",
              "text": "ThemeSpecification",
              "canonicalReference": "@antv/g6!ThemeSpecification:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    SpecThemeSolver: typeof "
            },
            {
              "kind": "Reference",
              "text": "ThemeSolvers.SpecThemeSolver",
              "canonicalReference": "@antv/g6!~SpecThemeSolver:class"
            },
            {
              "kind": "Content",
              "text": ";\n    SubjectThemeSolver: typeof "
            },
            {
              "kind": "Reference",
              "text": "ThemeSolvers.SubjectThemeSolver",
              "canonicalReference": "@antv/g6!~SubjectThemeSolver:class"
            },
            {
              "kind": "Content",
              "text": ";\n    ForceLayout: typeof "
            },
            {
              "kind": "Reference",
              "text": "Layouts.ForceLayout",
              "canonicalReference": "@antv/layout!ForceLayout:class"
            },
            {
              "kind": "Content",
              "text": ";\n    GridLayout: typeof "
            },
            {
              "kind": "Reference",
              "text": "Layouts.GridLayout",
              "canonicalReference": "@antv/layout!GridLayout:class"
            },
            {
              "kind": "Content",
              "text": ";\n    CircularLayout: typeof "
            },
            {
              "kind": "Reference",
              "text": "Layouts.CircularLayout",
              "canonicalReference": "@antv/layout!CircularLayout:class"
            },
            {
              "kind": "Content",
              "text": ";\n    ConcentricLayout: typeof "
            },
            {
              "kind": "Reference",
              "text": "Layouts.ConcentricLayout",
              "canonicalReference": "@antv/layout!ConcentricLayout:class"
            },
            {
              "kind": "Content",
              "text": ";\n    RandomLayout: typeof "
            },
            {
              "kind": "Reference",
              "text": "Layouts.RandomLayout",
              "canonicalReference": "@antv/layout!RandomLayout:class"
            },
            {
              "kind": "Content",
              "text": ";\n    MDSLayout: typeof "
            },
            {
              "kind": "Reference",
              "text": "Layouts.MDSLayout",
              "canonicalReference": "@antv/layout!MDSLayout:class"
            },
            {
              "kind": "Content",
              "text": ";\n    RadialLayout: typeof "
            },
            {
              "kind": "Reference",
              "text": "Layouts.RadialLayout",
              "canonicalReference": "@antv/layout!RadialLayout:class"
            },
            {
              "kind": "Content",
              "text": ";\n    FruchtermanLayout: typeof "
            },
            {
              "kind": "Reference",
              "text": "Layouts.FruchtermanLayout",
              "canonicalReference": "@antv/layout!FruchtermanLayout:class"
            },
            {
              "kind": "Content",
              "text": ";\n    D3ForceLayout: typeof "
            },
            {
              "kind": "Reference",
              "text": "Layouts.D3ForceLayout",
              "canonicalReference": "@antv/layout!D3ForceLayout:class"
            },
            {
              "kind": "Content",
              "text": ";\n    ForceAtlas2Layout: typeof "
            },
            {
              "kind": "Reference",
              "text": "Layouts.ForceAtlas2Layout",
              "canonicalReference": "@antv/layout!ForceAtlas2Layout:class"
            },
            {
              "kind": "Content",
              "text": ";\n    DagreLayout: typeof "
            },
            {
              "kind": "Reference",
              "text": "Layouts.DagreLayout",
              "canonicalReference": "@antv/layout!DagreLayout:class"
            },
            {
              "kind": "Content",
              "text": ";\n    ComboCombinedLayout: typeof "
            },
            {
              "kind": "Reference",
              "text": "Layouts.ComboCombinedLayout",
              "canonicalReference": "@antv/layout!ComboCombinedLayout:class"
            },
            {
              "kind": "Content",
              "text": ";\n    compactBox: any;\n    dendrogram: any;\n    indented: any;\n    mindmap: any;\n    CircleNode: typeof "
            },
            {
              "kind": "Reference",
              "text": "Nodes.CircleNode",
              "canonicalReference": "@antv/g6!~CircleNode:class"
            },
            {
              "kind": "Content",
              "text": ";\n    RectNode: typeof "
            },
            {
              "kind": "Reference",
              "text": "Nodes.RectNode",
              "canonicalReference": "@antv/g6!~RectNode:class"
            },
            {
              "kind": "Content",
              "text": ";\n    DiamondNode: typeof "
            },
            {
              "kind": "Reference",
              "text": "Nodes.DiamondNode",
              "canonicalReference": "@antv/g6!~DiamondNode:class"
            },
            {
              "kind": "Content",
              "text": ";\n    DonutNode: typeof "
            },
            {
              "kind": "Reference",
              "text": "Nodes.DonutNode",
              "canonicalReference": "@antv/g6!~DonutNode:class"
            },
            {
              "kind": "Content",
              "text": ";\n    SphereNode: typeof "
            },
            {
              "kind": "Reference",
              "text": "Nodes.SphereNode",
              "canonicalReference": "@antv/g6!~SphereNode:class"
            },
            {
              "kind": "Content",
              "text": ";\n    StarNode: typeof "
            },
            {
              "kind": "Reference",
              "text": "Nodes.StarNode",
              "canonicalReference": "@antv/g6!~StarNode:class"
            },
            {
              "kind": "Content",
              "text": ";\n    HexagonNode: typeof "
            },
            {
              "kind": "Reference",
              "text": "Nodes.HexagonNode",
              "canonicalReference": "@antv/g6!~HexagonNode:class"
            },
            {
              "kind": "Content",
              "text": ";\n    TriangleNode: typeof "
            },
            {
              "kind": "Reference",
              "text": "Nodes.TriangleNode",
              "canonicalReference": "@antv/g6!~TriangleNode:class"
            },
            {
              "kind": "Content",
              "text": ";\n    EllipseNode: typeof "
            },
            {
              "kind": "Reference",
              "text": "Nodes.EllipseNode",
              "canonicalReference": "@antv/g6!~EllipseNode:class"
            },
            {
              "kind": "Content",
              "text": ";\n    ModelRectNode: typeof "
            },
            {
              "kind": "Reference",
              "text": "Nodes.ModelRectNode",
              "canonicalReference": "@antv/g6!~ModelRectNode:class"
            },
            {
              "kind": "Content",
              "text": ";\n    CubeNode: typeof "
            },
            {
              "kind": "Reference",
              "text": "Nodes.CubeNode",
              "canonicalReference": "@antv/g6!~CubeNode:class"
            },
            {
              "kind": "Content",
              "text": ";\n    PlaneNode: typeof "
            },
            {
              "kind": "Reference",
              "text": "Nodes.PlaneNode",
              "canonicalReference": "@antv/g6!~PlaneNode:class"
            },
            {
              "kind": "Content",
              "text": ";\n    BaseNode: typeof "
            },
            {
              "kind": "Reference",
              "text": "Nodes.BaseNode",
              "canonicalReference": "@antv/g6!~BaseNode:class"
            },
            {
              "kind": "Content",
              "text": ";\n    BaseNode3D: typeof "
            },
            {
              "kind": "Reference",
              "text": "Nodes.BaseNode3D",
              "canonicalReference": "@antv/g6!~BaseNode3D:class"
            },
            {
              "kind": "Content",
              "text": ";\n    LineEdge: typeof "
            },
            {
              "kind": "Reference",
              "text": "Edges.LineEdge",
              "canonicalReference": "@antv/g6!~LineEdge:class"
            },
            {
              "kind": "Content",
              "text": ";\n    CubicEdge: typeof "
            },
            {
              "kind": "Reference",
              "text": "Edges.CubicEdge",
              "canonicalReference": "@antv/g6!~CubicEdge:class"
            },
            {
              "kind": "Content",
              "text": ";\n    CubicHorizontalEdge: typeof "
            },
            {
              "kind": "Reference",
              "text": "Edges.CubicHorizontalEdge",
              "canonicalReference": "@antv/g6!~CubicHorizontalEdge:class"
            },
            {
              "kind": "Content",
              "text": ";\n    CubicVerticalEdge: typeof "
            },
            {
              "kind": "Reference",
              "text": "Edges.CubicVerticalEdge",
              "canonicalReference": "@antv/g6!~CubicVerticalEdge:class"
            },
            {
              "kind": "Content",
              "text": ";\n    LoopEdge: typeof "
            },
            {
              "kind": "Reference",
              "text": "Edges.LoopEdge",
              "canonicalReference": "@antv/g6!~LoopEdge:class"
            },
            {
              "kind": "Content",
              "text": ";\n    PolylineEdge: typeof "
            },
            {
              "kind": "Reference",
              "text": "Edges.PolylineEdge",
              "canonicalReference": "@antv/g6!~PolylineEdge:class"
            },
            {
              "kind": "Content",
              "text": ";\n    QuadraticEdge: typeof "
            },
            {
              "kind": "Reference",
              "text": "Edges.QuadraticEdge",
              "canonicalReference": "@antv/g6!~QuadraticEdge:class"
            },
            {
              "kind": "Content",
              "text": ";\n    CircleCombo: typeof "
            },
            {
              "kind": "Reference",
              "text": "Combos.CircleCombo",
              "canonicalReference": "@antv/g6!~CircleCombo:class"
            },
            {
              "kind": "Content",
              "text": ";\n    RectCombo: typeof "
            },
            {
              "kind": "Reference",
              "text": "Combos.RectCombo",
              "canonicalReference": "@antv/g6!~RectCombo:class"
            },
            {
              "kind": "Content",
              "text": ";\n    BaseBehavior: typeof "
            },
            {
              "kind": "Reference",
              "text": "BaseBehavior",
              "canonicalReference": "@antv/g6!Behavior:class"
            },
            {
              "kind": "Content",
              "text": ";\n    ActivateRelations: typeof "
            },
            {
              "kind": "Reference",
              "text": "Behaviors.ActivateRelations",
              "canonicalReference": "@antv/g6!~ActivateRelations:class"
            },
            {
              "kind": "Content",
              "text": ";\n    BrushSelect: typeof "
            },
            {
              "kind": "Reference",
              "text": "Behaviors.BrushSelect",
              "canonicalReference": "@antv/g6!~BrushSelect:class"
            },
            {
              "kind": "Content",
              "text": ";\n    HoverActivate: typeof "
            },
            {
              "kind": "Reference",
              "text": "Behaviors.HoverActivate",
              "canonicalReference": "@antv/g6!~HoverActivate:class"
            },
            {
              "kind": "Content",
              "text": ";\n    LassoSelect: typeof "
            },
            {
              "kind": "Reference",
              "text": "Behaviors.LassoSelect",
              "canonicalReference": "@antv/g6!~LassoSelect:class"
            },
            {
              "kind": "Content",
              "text": ";\n    OrbitCanvas3D: typeof "
            },
            {
              "kind": "Reference",
              "text": "Behaviors.OrbitCanvas3D",
              "canonicalReference": "@antv/g6!~OrbitCanvas3D:class"
            },
            {
              "kind": "Content",
              "text": ";\n    RotateCanvas3D: typeof "
            },
            {
              "kind": "Reference",
              "text": "Behaviors.RotateCanvas3D",
              "canonicalReference": "@antv/g6!~RotateCanvas3D:class"
            },
            {
              "kind": "Content",
              "text": ";\n    TrackCanvas3D: typeof "
            },
            {
              "kind": "Reference",
              "text": "Behaviors.TrackCanvas3D",
              "canonicalReference": "@antv/g6!~TrackCanvas3D:class"
            },
            {
              "kind": "Content",
              "text": ";\n    ZoomCanvas3D: typeof "
            },
            {
              "kind": "Reference",
              "text": "Behaviors.ZoomCanvas3D",
              "canonicalReference": "@antv/g6!~ZoomCanvas3D:class"
            },
            {
              "kind": "Content",
              "text": ";\n    ZoomCanvas: typeof "
            },
            {
              "kind": "Reference",
              "text": "Behaviors.ZoomCanvas",
              "canonicalReference": "@antv/g6!~ZoomCanvas:class"
            },
            {
              "kind": "Content",
              "text": ";\n    DragCanvas: typeof "
            },
            {
              "kind": "Reference",
              "text": "Behaviors.DragCanvas",
              "canonicalReference": "@antv/g6!~DragCanvas:class"
            },
            {
              "kind": "Content",
              "text": ";\n    CollapseExpandTree: typeof "
            },
            {
              "kind": "Reference",
              "text": "Behaviors.CollapseExpandTree",
              "canonicalReference": "@antv/g6!~CollapseExpandTree:class"
            },
            {
              "kind": "Content",
              "text": ";\n    CollapseExpandCombo: typeof "
            },
            {
              "kind": "Reference",
              "text": "Behaviors.CollapseExpandCombo",
              "canonicalReference": "@antv/g6!~CollapseExpandCombo:class"
            },
            {
              "kind": "Content",
              "text": ";\n    DragNode: typeof "
            },
            {
              "kind": "Reference",
              "text": "Behaviors.DragNode",
              "canonicalReference": "@antv/g6!~DragNode:class"
            },
            {
              "kind": "Content",
              "text": ";\n    DragCombo: typeof "
            },
            {
              "kind": "Reference",
              "text": "Behaviors.DragCombo",
              "canonicalReference": "@antv/g6!~DragCombo:class"
            },
            {
              "kind": "Content",
              "text": ";\n    CreateEdge: typeof "
            },
            {
              "kind": "Reference",
              "text": "Behaviors.CreateEdge",
              "canonicalReference": "@antv/g6!~CreateEdge:class"
            },
            {
              "kind": "Content",
              "text": ";\n    ShortcutsCall: typeof "
            },
            {
              "kind": "Reference",
              "text": "Behaviors.ShortcutsCall",
              "canonicalReference": "@antv/g6!~ShortcutsCall:class"
            },
            {
              "kind": "Content",
              "text": ";\n    ScrollCanvas: typeof "
            },
            {
              "kind": "Reference",
              "text": "Behaviors.ScrollCanvas",
              "canonicalReference": "@antv/g6!~ScrollCanvas:class"
            },
            {
              "kind": "Content",
              "text": ";\n    BasePlugin: typeof "
            },
            {
              "kind": "Reference",
              "text": "BasePlugin",
              "canonicalReference": "@antv/g6!PluginBase:class"
            },
            {
              "kind": "Content",
              "text": ";\n    History: {\n        new (): "
            },
            {
              "kind": "Reference",
              "text": "History",
              "canonicalReference": "!History:interface"
            },
            {
              "kind": "Content",
              "text": ";\n        prototype: "
            },
            {
              "kind": "Reference",
              "text": "History",
              "canonicalReference": "!History:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    };\n    LodController: typeof "
            },
            {
              "kind": "Reference",
              "text": "Widgets.LodController",
              "canonicalReference": "@antv/g6!~LodController:class"
            },
            {
              "kind": "Content",
              "text": ";\n    Toolbar: typeof "
            },
            {
              "kind": "Reference",
              "text": "Widgets.Toolbar",
              "canonicalReference": "@antv/g6!~Toolbar:class"
            },
            {
              "kind": "Content",
              "text": ";\n    Tooltip: typeof "
            },
            {
              "kind": "Reference",
              "text": "Widgets.Tooltip",
              "canonicalReference": "@antv/g6!~Tooltip:class"
            },
            {
              "kind": "Content",
              "text": ";\n    Minimap: typeof "
            },
            {
              "kind": "Reference",
              "text": "Widgets.Minimap",
              "canonicalReference": "@antv/g6!~Minimap:class"
            },
            {
              "kind": "Content",
              "text": ";\n    Grid: typeof "
            },
            {
              "kind": "Reference",
              "text": "Widgets.Grid",
              "canonicalReference": "@antv/g6!~Grid:class"
            },
            {
              "kind": "Content",
              "text": ";\n    Menu: typeof "
            },
            {
              "kind": "Reference",
              "text": "Widgets.Menu",
              "canonicalReference": "@antv/g6!~Menu:class"
            },
            {
              "kind": "Content",
              "text": ";\n    Fisheye: typeof "
            },
            {
              "kind": "Reference",
              "text": "Widgets.Fisheye",
              "canonicalReference": "@antv/g6!~Fisheye:class"
            },
            {
              "kind": "Content",
              "text": ";\n    Legend: typeof "
            },
            {
              "kind": "Reference",
              "text": "Widgets.Legend",
              "canonicalReference": "@antv/g6!~Legend:class"
            },
            {
              "kind": "Content",
              "text": ";\n    Timebar: typeof "
            },
            {
              "kind": "Reference",
              "text": "Widgets.Timebar",
              "canonicalReference": "@antv/g6!~Timebar:class"
            },
            {
              "kind": "Content",
              "text": ";\n    Hull: typeof "
            },
            {
              "kind": "Reference",
              "text": "Hull",
              "canonicalReference": "@antv/g6!~Hull:class"
            },
            {
              "kind": "Content",
              "text": ";\n    Snapline: typeof "
            },
            {
              "kind": "Reference",
              "text": "Widgets.Snapline",
              "canonicalReference": "@antv/g6!~Snapline:class"
            },
            {
              "kind": "Content",
              "text": ";\n    EdgeFilterLens: typeof "
            },
            {
              "kind": "Reference",
              "text": "Widgets.EdgeFilterLens",
              "canonicalReference": "@antv/g6!~EdgeFilterLens:class"
            },
            {
              "kind": "Content",
              "text": ";\n    WaterMarker: typeof "
            },
            {
              "kind": "Reference",
              "text": "WaterMarker",
              "canonicalReference": "@antv/g6!~WaterMarker:class"
            },
            {
              "kind": "Content",
              "text": ";\n    EdgeBundling: typeof "
            },
            {
              "kind": "Reference",
              "text": "Widgets.EdgeBundling",
              "canonicalReference": "@antv/g6!~EdgeBundling:class"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            }
          ],
          "fileUrlPath": "lib/plugin/index.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "Extensions",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 176
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@antv/g6!getRegisterPlugin:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "getRegisterPlugin: "
            },
            {
              "kind": "Content",
              "text": "any"
            }
          ],
          "fileUrlPath": "lib/plugin/register.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "getRegisterPlugin",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@antv/g6!getRegisterPlugins:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "getRegisterPlugins: "
            },
            {
              "kind": "Content",
              "text": "any"
            }
          ],
          "fileUrlPath": "lib/plugin/register.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "getRegisterPlugins",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@antv/g6!Graph:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class Graph<B extends "
            },
            {
              "kind": "Reference",
              "text": "BehaviorRegistry",
              "canonicalReference": "@antv/g6!BehaviorRegistry:interface"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", T extends "
            },
            {
              "kind": "Reference",
              "text": "ThemeSolverRegistry",
              "canonicalReference": "@antv/g6!~ThemeSolverRegistry:interface"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "EventEmitter",
              "canonicalReference": "@antv/event-emitter!default:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "lib/runtime/graph.d.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "B",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              }
            }
          ],
          "isAbstract": false,
          "name": "Graph",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@antv/g6!Graph:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `Graph` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(spec: "
                },
                {
                  "kind": "Reference",
                  "text": "Specification",
                  "canonicalReference": "@antv/g6!Specification:interface"
                },
                {
                  "kind": "Content",
                  "text": "<B, T>"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "spec",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#addBehaviors:member(1)",
              "docComment": "/**\n * Add behavior(s) to mode(s).\n *\n * @param behaviors - behavior names or configs\n *\n * @param modes - mode names  @group Interaction\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addBehaviors(behaviors: "
                },
                {
                  "kind": "Reference",
                  "text": "BehaviorOptionsOf",
                  "canonicalReference": "@antv/g6!BehaviorOptionsOf:type"
                },
                {
                  "kind": "Content",
                  "text": "<B> | "
                },
                {
                  "kind": "Reference",
                  "text": "BehaviorOptionsOf",
                  "canonicalReference": "@antv/g6!BehaviorOptionsOf:type"
                },
                {
                  "kind": "Content",
                  "text": "<B>[]"
                },
                {
                  "kind": "Content",
                  "text": ", modes: "
                },
                {
                  "kind": "Content",
                  "text": "string | string[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "behaviors",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "modes",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addBehaviors"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#addCombo:member(1)",
              "docComment": "/**\n * Add a new combo to the graph, and update the structure of the existed child in childrenIds to be the children of the new combo. Different from addData with combo type, this API update the succeeds' combo tree structures in the same time.\n *\n * @param model - combo user data.\n *\n * @param childrenIds - the ids of the children nodes / combos to move into the new combo.\n *\n * @returns whether success  @group Combo\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addCombo(model: "
                },
                {
                  "kind": "Reference",
                  "text": "ComboUserModel",
                  "canonicalReference": "@antv/g6!ComboUserModel:type"
                },
                {
                  "kind": "Content",
                  "text": ", childrenIds: "
                },
                {
                  "kind": "Reference",
                  "text": "ID",
                  "canonicalReference": "@antv/graphlib!ID:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ComboModel",
                  "canonicalReference": "@antv/g6!ComboModel:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "model",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "childrenIds",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addCombo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#addData:member(1)",
              "docComment": "/**\n * Add one or more node/edge/combo data to the graph.\n *\n * @param itemType - item type\n *\n * @param model - user data\n *\n * @param models - \n *\n * @returns whether success  @group Data\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addData(itemType: "
                },
                {
                  "kind": "Reference",
                  "text": "ITEM_TYPE",
                  "canonicalReference": "@antv/g6!~ITEM_TYPE:type"
                },
                {
                  "kind": "Content",
                  "text": ", models: "
                },
                {
                  "kind": "Reference",
                  "text": "NodeUserModel",
                  "canonicalReference": "@antv/g6!NodeUserModel:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "EdgeUserModel",
                  "canonicalReference": "@antv/g6!EdgeUserModel:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "ComboUserModel",
                  "canonicalReference": "@antv/g6!ComboUserModel:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "NodeUserModel",
                  "canonicalReference": "@antv/g6!NodeUserModel:type"
                },
                {
                  "kind": "Content",
                  "text": "[] | "
                },
                {
                  "kind": "Reference",
                  "text": "EdgeUserModel",
                  "canonicalReference": "@antv/g6!EdgeUserModel:type"
                },
                {
                  "kind": "Content",
                  "text": "[] | "
                },
                {
                  "kind": "Reference",
                  "text": "ComboUserModel",
                  "canonicalReference": "@antv/g6!ComboUserModel:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "NodeModel",
                  "canonicalReference": "@antv/g6!NodeModel:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "EdgeModel",
                  "canonicalReference": "@antv/g6!EdgeModel:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "ComboModel",
                  "canonicalReference": "@antv/g6!ComboModel:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "NodeModel",
                  "canonicalReference": "@antv/g6!NodeModel:type"
                },
                {
                  "kind": "Content",
                  "text": "[] | "
                },
                {
                  "kind": "Reference",
                  "text": "EdgeModel",
                  "canonicalReference": "@antv/g6!EdgeModel:type"
                },
                {
                  "kind": "Content",
                  "text": "[] | "
                },
                {
                  "kind": "Reference",
                  "text": "ComboModel",
                  "canonicalReference": "@antv/g6!ComboModel:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 16,
                "endIndex": 28
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "itemType",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "models",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 15
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addData"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#addPlugins:member(1)",
              "docComment": "/**\n * Add plugin(s) to graph.\n *\n * @param pluginCfgs -  @group Plugin\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addPlugins(pluginCfgs: "
                },
                {
                  "kind": "Content",
                  "text": "({\n        key: string;\n        type: string;\n        [cfgName: string]: unknown;\n    } | string)[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "pluginCfgs",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addPlugins"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#asyncToDataUrl:member(1)",
              "docComment": "/**\n * Asynchronously converts the canvas content to a Data URL of the specified type and invokes the provided callback.\n *\n * @param type - The type of the Data URL (optional, defaults to 'image/png').\n *\n * @param callback - A callback function to handle the Data URL (optional).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected asyncToDataUrl(type?: "
                },
                {
                  "kind": "Reference",
                  "text": "DataURLType",
                  "canonicalReference": "@antv/g-lite!DataURLType:type"
                },
                {
                  "kind": "Content",
                  "text": ", callback?: "
                },
                {
                  "kind": "Reference",
                  "text": "Function",
                  "canonicalReference": "!Function:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": true,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "type",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "asyncToDataUrl"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#asyncToFullDataUrl:member(1)",
              "docComment": "/**\n * Asynchronously converts the entire canvas content to a Data URL of the specified type with optional padding, and invokes the provided callback.\n *\n * @param type - The type of the Data URL (optional, defaults to 'image/png').\n *\n * @param imageConfig - Configuration options for the image (optional).\n *\n * @param  - imageConfig.padding\n *\n * @param callback - A callback function to handle the Data URL (optional).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected asyncToFullDataUrl(type?: "
                },
                {
                  "kind": "Reference",
                  "text": "DataURLType",
                  "canonicalReference": "@antv/g-lite!DataURLType:type"
                },
                {
                  "kind": "Content",
                  "text": ", imageConfig?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        padding?: number | number[];\n    }"
                },
                {
                  "kind": "Content",
                  "text": ", callback?: "
                },
                {
                  "kind": "Content",
                  "text": "(dataUrl: string) => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": true,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "type",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "imageConfig",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "asyncToFullDataUrl"
            },
            {
              "kind": "Property",
              "canonicalReference": "@antv/g6!Graph#backgroundCanvas:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "backgroundCanvas: "
                },
                {
                  "kind": "Reference",
                  "text": "Canvas",
                  "canonicalReference": "@antv/g-lite!Canvas:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "backgroundCanvas",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#backItem:member(1)",
              "docComment": "/**\n * Make the item(s) to the back.\n *\n * @param ids -  @group Item\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "backItem(ids: "
                },
                {
                  "kind": "Reference",
                  "text": "ID",
                  "canonicalReference": "@antv/graphlib!ID:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "ID",
                  "canonicalReference": "@antv/graphlib!ID:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "ids",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "backItem"
            },
            {
              "kind": "Property",
              "canonicalReference": "@antv/g6!Graph#canvas:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "canvas: "
                },
                {
                  "kind": "Reference",
                  "text": "Canvas",
                  "canonicalReference": "@antv/g-lite!Canvas:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "canvas",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#changeData:member(1)",
              "docComment": "/**\n * Change graph data.\n *\n * @param data - new data\n *\n * @param type - the way to change data, 'replace' means discard the old data and use the new one; 'mergeReplace' means merge the common part, remove (old - new), add (new - old)\n *\n * @param relayout - whether relayout the nodes after data changing  @group Data\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "changeData(data: "
                },
                {
                  "kind": "Reference",
                  "text": "DataConfig",
                  "canonicalReference": "@antv/g6!DataConfig:type"
                },
                {
                  "kind": "Content",
                  "text": ", type?: "
                },
                {
                  "kind": "Content",
                  "text": "'replace' | 'mergeReplace'"
                },
                {
                  "kind": "Content",
                  "text": ", relayout?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "data",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "type",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "relayout",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "changeData"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#changeRenderer:member(1)",
              "docComment": "/**\n * Change the renderer at runtime.\n *\n * @param type - renderer name\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "changeRenderer(type: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "type",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "changeRenderer"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#clear:member(1)",
              "docComment": "/**\n * Clear the graph, means remove all the items on the graph.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clear(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "clear"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#clearItemState:member(1)",
              "docComment": "/**\n * Clear all the states for item(s).\n *\n * @param ids - the id(s) for the item(s) to be clear\n *\n * @param states - the states' names, all the states wil be cleared if states is not assigned  @group Item\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clearItemState(ids: "
                },
                {
                  "kind": "Reference",
                  "text": "ID",
                  "canonicalReference": "@antv/graphlib!ID:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "ID",
                  "canonicalReference": "@antv/graphlib!ID:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", states?: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "ids",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "states",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "clearItemState"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#collapse:member(1)",
              "docComment": "/**\n * Collapse sub tree(s).\n *\n * @param ids - Root id(s) of the sub trees.\n *\n * @param disableAnimate - Whether disable the animations for this operation.\n *\n * @param stack - Whether push this operation to stack.  @group Tree\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "collapse(ids: "
                },
                {
                  "kind": "Reference",
                  "text": "ID",
                  "canonicalReference": "@antv/graphlib!ID:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "ID",
                  "canonicalReference": "@antv/graphlib!ID:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", disableAnimate?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "ids",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "disableAnimate",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "collapse"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#collapseCombo:member(1)",
              "docComment": "/**\n * Collapse a combo.\n *\n * @param comboId - combo id or ids' array.\n *\n * @param comboIds -  @group Combo\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "collapseCombo(comboIds: "
                },
                {
                  "kind": "Reference",
                  "text": "ID",
                  "canonicalReference": "@antv/graphlib!ID:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "ID",
                  "canonicalReference": "@antv/graphlib!ID:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "comboIds",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "collapseCombo"
            },
            {
              "kind": "Property",
              "canonicalReference": "@antv/g6!Graph#container:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "container: "
                },
                {
                  "kind": "Reference",
                  "text": "HTMLElement",
                  "canonicalReference": "!HTMLElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "container",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#destroy:member(1)",
              "docComment": "/**\n * Destroy the graph instance and remove the related canvases.\n *\n * @param callback -  @group Graph Instance\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "destroy(callback?: "
                },
                {
                  "kind": "Reference",
                  "text": "Function",
                  "canonicalReference": "!Function:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "destroy"
            },
            {
              "kind": "Property",
              "canonicalReference": "@antv/g6!Graph#destroyed:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "destroyed: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "destroyed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#downloadFullImage:member(1)",
              "docComment": "/**\n * Initiates the download of the entire graph as an image with optional name, type, and padding configuration.\n *\n * @param name - The desired name for the downloaded image file (optional).\n *\n * @param type - The type of the image to download (optional, defaults to 'image/png').\n *\n * @param imageConfig - Configuration options for the image (optional).\n *\n * @param  - imageConfig.padding\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "downloadFullImage(name?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", type?: "
                },
                {
                  "kind": "Reference",
                  "text": "DataURLType",
                  "canonicalReference": "@antv/g-lite!DataURLType:type"
                },
                {
                  "kind": "Content",
                  "text": ", imageConfig?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        padding?: number | number[];\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "type",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "imageConfig",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "downloadFullImage"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#downloadImage:member(1)",
              "docComment": "/**\n * Initiates the download of the graph as an image with an optional name and type.\n *\n * @param name - The desired name for the downloaded image file (optional).\n *\n * @param type - The type of the image to download (optional, defaults to 'image/png').\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "downloadImage(name?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", type?: "
                },
                {
                  "kind": "Reference",
                  "text": "DataURLType",
                  "canonicalReference": "@antv/g-lite!DataURLType:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "type",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "downloadImage"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#drawTransient:member(1)",
              "docComment": "/**\n * Draw or update a G shape or group to the transient canvas.\n *\n * @param type - shape type or item type\n *\n * @param id - new shape id or updated shape id for a interaction shape, node/edge/combo id for item interaction group drawing\n *\n * @param config - \n *\n * @param  - config.action\n *\n * @param  - config.data\n *\n * @param  - config.style\n *\n * @param  - config.drawSource\n *\n * @param  - config.drawTarget\n *\n * @param  - config.shapeIds\n *\n * @param  - config.visible\n *\n * @param  - config.upsertAncestors\n *\n * @param canvas - \n *\n * @returns upserted shape or group  @group Interaction\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "drawTransient(type: "
                },
                {
                  "kind": "Reference",
                  "text": "ITEM_TYPE",
                  "canonicalReference": "@antv/g6!~ITEM_TYPE:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "SHAPE_TYPE",
                  "canonicalReference": "@antv/g6!~SHAPE_TYPE:type"
                },
                {
                  "kind": "Content",
                  "text": ", id: "
                },
                {
                  "kind": "Reference",
                  "text": "ID",
                  "canonicalReference": "@antv/graphlib!ID:type"
                },
                {
                  "kind": "Content",
                  "text": ", config: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        action?: 'remove' | 'add' | 'update' | undefined;\n        data?: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, any>;\n        style?: "
                },
                {
                  "kind": "Reference",
                  "text": "ShapeStyle",
                  "canonicalReference": "@antv/g6!~ShapeStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        drawSource?: boolean;\n        drawTarget?: boolean;\n        shapeIds?: string[];\n        visible?: boolean;\n        upsertAncestors?: boolean;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ", canvas?: "
                },
                {
                  "kind": "Reference",
                  "text": "Canvas",
                  "canonicalReference": "@antv/g-lite!Canvas:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "DisplayObject",
                  "canonicalReference": "@antv/g-lite!DisplayObject:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 15,
                "endIndex": 16
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "type",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "config",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 12
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "canvas",
                  "parameterTypeTokenRange": {
                    "startIndex": 13,
                    "endIndex": 14
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "drawTransient"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#expand:member(1)",
              "docComment": "/**\n * Expand sub tree(s).\n *\n * @param ids - Root id(s) of the sub trees.\n *\n * @param disableAnimate - Whether disable the animations for this operation.\n *\n * @param stack - Whether push this operation to stack.  @group Tree\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "expand(ids: "
                },
                {
                  "kind": "Reference",
                  "text": "ID",
                  "canonicalReference": "@antv/graphlib!ID:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "ID",
                  "canonicalReference": "@antv/graphlib!ID:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", disableAnimate?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "ids",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "disableAnimate",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "expand"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#expandCombo:member(1)",
              "docComment": "/**\n * Expand a combo.\n *\n * @param comboId - combo id or ids' array.\n *\n * @param comboIds -  @group Combo\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "expandCombo(comboIds: "
                },
                {
                  "kind": "Reference",
                  "text": "ID",
                  "canonicalReference": "@antv/graphlib!ID:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "ID",
                  "canonicalReference": "@antv/graphlib!ID:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "comboIds",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "expandCombo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#findIdByState:member(1)",
              "docComment": "/**\n * Find items which has the state.\n *\n * @param itemType - item type\n *\n * @param state - state name\n *\n * @param value - \n *\n * @param additionalFilter - additional filter function\n *\n * @returns items that is the type and has the state  @group Item\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "findIdByState(itemType: "
                },
                {
                  "kind": "Reference",
                  "text": "ITEM_TYPE",
                  "canonicalReference": "@antv/g6!~ITEM_TYPE:type"
                },
                {
                  "kind": "Content",
                  "text": ", state: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", value?: "
                },
                {
                  "kind": "Content",
                  "text": "string | boolean"
                },
                {
                  "kind": "Content",
                  "text": ", additionalFilter?: "
                },
                {
                  "kind": "Content",
                  "text": "(item: "
                },
                {
                  "kind": "Reference",
                  "text": "NodeModel",
                  "canonicalReference": "@antv/g6!NodeModel:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "EdgeModel",
                  "canonicalReference": "@antv/g6!EdgeModel:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "ComboModel",
                  "canonicalReference": "@antv/g6!ComboModel:type"
                },
                {
                  "kind": "Content",
                  "text": ") => boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ID",
                  "canonicalReference": "@antv/graphlib!ID:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 15,
                "endIndex": 17
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "itemType",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "state",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "additionalFilter",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 14
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "findIdByState"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#fitCenter:member(1)",
              "docComment": "/**\n * Fit the graph center to the view center.\n *\n * @param boundsType - \n *\n * @param effectTiming - animation configurations\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fitCenter(boundsType?: "
                },
                {
                  "kind": "Content",
                  "text": "'render' | 'layout'"
                },
                {
                  "kind": "Content",
                  "text": ", effectTiming?: "
                },
                {
                  "kind": "Reference",
                  "text": "CameraAnimationOptions",
                  "canonicalReference": "@antv/g6!~CameraAnimationOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "boundsType",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "effectTiming",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "fitCenter"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#fitView:member(1)",
              "docComment": "/**\n * Fit the graph content to the view.\n *\n * @param  - options.padding padding while fitting\n *\n * @param  - options.rules rules for fitting\n *\n * @param options - \n *\n * @param effectTiming - animation configurations\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fitView(options?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        padding?: "
                },
                {
                  "kind": "Reference",
                  "text": "Padding",
                  "canonicalReference": "@antv/g6!~Padding:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        rules?: "
                },
                {
                  "kind": "Reference",
                  "text": "FitViewRules",
                  "canonicalReference": "@antv/g6!~FitViewRules:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ", effectTiming?: "
                },
                {
                  "kind": "Reference",
                  "text": "CameraAnimationOptions",
                  "canonicalReference": "@antv/g6!~CameraAnimationOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 6
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "effectTiming",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "fitView"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#focusItem:member(1)",
              "docComment": "/**\n * Move the graph to make the item align the view center.\n *\n * @param item - node/edge/combo item or its id\n *\n * @param id - \n *\n * @param effectTiming - animation configurations\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "focusItem(id: "
                },
                {
                  "kind": "Reference",
                  "text": "ID",
                  "canonicalReference": "@antv/graphlib!ID:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "ID",
                  "canonicalReference": "@antv/graphlib!ID:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", effectTiming?: "
                },
                {
                  "kind": "Reference",
                  "text": "CameraAnimationOptions",
                  "canonicalReference": "@antv/g6!~CameraAnimationOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "effectTiming",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "focusItem"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#frontItem:member(1)",
              "docComment": "/**\n * Make the item(s) to the front.\n *\n * @param ids -  @group Item\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "frontItem(ids: "
                },
                {
                  "kind": "Reference",
                  "text": "ID",
                  "canonicalReference": "@antv/graphlib!ID:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "ID",
                  "canonicalReference": "@antv/graphlib!ID:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "ids",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "frontItem"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#getAllCombosData:member(1)",
              "docComment": "/**\n * Get all the combos' inner data\n *\n * @returns all combos' inner data on the graph  @group Data\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getAllCombosData(): "
                },
                {
                  "kind": "Reference",
                  "text": "ComboModel",
                  "canonicalReference": "@antv/g6!ComboModel:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getAllCombosData"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#getAllEdgesData:member(1)",
              "docComment": "/**\n * Get all the edges' inner data\n *\n * @returns all edges' inner data on the graph  @group Data\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getAllEdgesData(): "
                },
                {
                  "kind": "Reference",
                  "text": "EdgeModel",
                  "canonicalReference": "@antv/g6!EdgeModel:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getAllEdgesData"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#getAllNodesData:member(1)",
              "docComment": "/**\n * Get all the nodes' inner data\n *\n * @returns all nodes' inner data on the graph  @group Data\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getAllNodesData(): "
                },
                {
                  "kind": "Reference",
                  "text": "NodeModel",
                  "canonicalReference": "@antv/g6!NodeModel:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getAllNodesData"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#getCanvasByClient:member(1)",
              "docComment": "/**\n * Get the rendering coordinate according to the browser coordinate.\n *\n * @param Point - browser coordinate\n *\n * @param clientPoint - \n *\n * @returns rendering coordinate  @group View\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getCanvasByClient(clientPoint: "
                },
                {
                  "kind": "Reference",
                  "text": "Point",
                  "canonicalReference": "@antv/g6!Point:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Point",
                  "canonicalReference": "@antv/g6!Point:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "clientPoint",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getCanvasByClient"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#getCanvasByViewport:member(1)",
              "docComment": "/**\n * Get the rendering coordinate according to the canvas dom (viewport) coordinate.\n *\n * @param Point - rendering coordinate\n *\n * @param viewportPoint - \n *\n * @returns canvas dom (viewport) coordinate  @group View\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getCanvasByViewport(viewportPoint: "
                },
                {
                  "kind": "Reference",
                  "text": "Point",
                  "canonicalReference": "@antv/g6!Point:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Point",
                  "canonicalReference": "@antv/g6!Point:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "viewportPoint",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getCanvasByViewport"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#getCanvasRange:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getCanvasRange(): "
                },
                {
                  "kind": "Reference",
                  "text": "Bounds",
                  "canonicalReference": "@antv/g6!~Bounds:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getCanvasRange"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#getClientByCanvas:member(1)",
              "docComment": "/**\n * Get the browser coordinate according to the rendering coordinate.\n *\n * @param Point - rendering coordinate\n *\n * @param canvasPoint - \n *\n * @returns browser coordinate  @group View\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getClientByCanvas(canvasPoint: "
                },
                {
                  "kind": "Reference",
                  "text": "Point",
                  "canonicalReference": "@antv/g6!Point:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Point",
                  "canonicalReference": "@antv/g6!Point:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "canvasPoint",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getClientByCanvas"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#getComboChildrenData:member(1)",
              "docComment": "/**\n * Get the children's data of a combo.\n *\n * @param comboId - combo id\n *\n * @returns children's data array  @group Data\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getComboChildrenData(comboId: "
                },
                {
                  "kind": "Reference",
                  "text": "ID",
                  "canonicalReference": "@antv/graphlib!ID:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "ComboModel",
                  "canonicalReference": "@antv/g6!ComboModel:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "NodeModel",
                  "canonicalReference": "@antv/g6!NodeModel:type"
                },
                {
                  "kind": "Content",
                  "text": ")[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "comboId",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getComboChildrenData"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#getComboData:member(1)",
              "docComment": "/**\n * Find an combo's inner data according to id or function.\n *\n * @param condition - id or condition function\n *\n * @returns result combo's inner data  @group Data\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getComboData(condition: "
                },
                {
                  "kind": "Reference",
                  "text": "ID",
                  "canonicalReference": "@antv/graphlib!ID:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "Function",
                  "canonicalReference": "!Function:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ComboModel",
                  "canonicalReference": "@antv/g6!ComboModel:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "condition",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getComboData"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#getDisplayModel:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected getDisplayModel(id: "
                },
                {
                  "kind": "Reference",
                  "text": "ID",
                  "canonicalReference": "@antv/graphlib!ID:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "NodeDisplayModel",
                  "canonicalReference": "@antv/g6!NodeDisplayModel:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "EdgeDisplayModel",
                  "canonicalReference": "@antv/g6!EdgeDisplayModel:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "ComboDisplayModel",
                  "canonicalReference": "@antv/g6!ComboDisplayModel:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": true,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getDisplayModel"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#getEdgeData:member(1)",
              "docComment": "/**\n * Find an edge's inner data according to id or function.\n *\n * @param condition - id or condition function\n *\n * @returns result edge's inner data  @group Data\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getEdgeData(condition: "
                },
                {
                  "kind": "Reference",
                  "text": "ID",
                  "canonicalReference": "@antv/graphlib!ID:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "Function",
                  "canonicalReference": "!Function:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "EdgeModel",
                  "canonicalReference": "@antv/g6!EdgeModel:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "condition",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getEdgeData"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#getItemAllStates:member(1)",
              "docComment": "/**\n * Get all the state names with value true for an item.\n *\n * @param id - the id for the item\n *\n * @returns {string[]} the state names with value true  @group Item\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getItemAllStates(id: "
                },
                {
                  "kind": "Reference",
                  "text": "ID",
                  "canonicalReference": "@antv/graphlib!ID:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getItemAllStates"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#getItemState:member(1)",
              "docComment": "/**\n * Get the state value for an item.\n *\n * @param id - the id for the item\n *\n * @param states - the state name\n *\n * @param state - \n *\n * @returns {boolean} the state value  @group Item\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getItemState(id: "
                },
                {
                  "kind": "Reference",
                  "text": "ID",
                  "canonicalReference": "@antv/graphlib!ID:type"
                },
                {
                  "kind": "Content",
                  "text": ", state: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string | boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "state",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getItemState"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#getItemVisible:member(1)",
              "docComment": "/**\n * Get the visibility for a node / edge / combo.\n *\n * @param id - the id for the node / edge / combo\n *\n * @returns visibility for the item, false for invisible or unexistence for the item  @group Item\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getItemVisible(id: "
                },
                {
                  "kind": "Reference",
                  "text": "ID",
                  "canonicalReference": "@antv/graphlib!ID:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getItemVisible"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#getItemVisibleShapeIds:member(1)",
              "docComment": "/**\n * Get the visible shape ids in a node / edge / combo.\n *\n * @param id - the id for the node / edge / combo\n *\n * @returns ids of the visible shapes\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getItemVisibleShapeIds(id: "
                },
                {
                  "kind": "Reference",
                  "text": "ID",
                  "canonicalReference": "@antv/graphlib!ID:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getItemVisibleShapeIds"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#getLayoutCurrentAnimation:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getLayoutCurrentAnimation(): "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@antv/g\")."
                },
                {
                  "kind": "Reference",
                  "text": "Animation",
                  "canonicalReference": "@antv/g-web-animations-api!Animation:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getLayoutCurrentAnimation"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#getMode:member(1)",
              "docComment": "/**\n * Get current mode.\n *\n * @returns mode name  @group Interaction\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getMode(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getMode"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#getNearEdgesData:member(1)",
              "docComment": "/**\n * Get nearby edges from a start node using quad-tree collision detection.\n *\n * @param nodeId - id of the start node\n *\n * @param shouldBegin - \n *\n * @returns nearby edges' data array\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getNearEdgesData(nodeId: "
                },
                {
                  "kind": "Reference",
                  "text": "ID",
                  "canonicalReference": "@antv/graphlib!ID:type"
                },
                {
                  "kind": "Content",
                  "text": ", shouldBegin?: "
                },
                {
                  "kind": "Content",
                  "text": "(edge: "
                },
                {
                  "kind": "Reference",
                  "text": "EdgeDisplayModel",
                  "canonicalReference": "@antv/g6!EdgeDisplayModel:type"
                },
                {
                  "kind": "Content",
                  "text": ") => boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "EdgeModel",
                  "canonicalReference": "@antv/g6!EdgeModel:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "nodeId",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "shouldBegin",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getNearEdgesData"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#getNeighborNodesData:member(1)",
              "docComment": "/**\n * Get one-hop node ids from a start node.\n *\n * @param nodeId - id of the start node\n *\n * @param direction - \n *\n * @returns one-hop nodes' data array  @group Data\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getNeighborNodesData(nodeId: "
                },
                {
                  "kind": "Reference",
                  "text": "ID",
                  "canonicalReference": "@antv/graphlib!ID:type"
                },
                {
                  "kind": "Content",
                  "text": ", direction?: "
                },
                {
                  "kind": "Content",
                  "text": "'in' | 'out' | 'both'"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "NodeModel",
                  "canonicalReference": "@antv/g6!NodeModel:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "nodeId",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "direction",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getNeighborNodesData"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#getNodeData:member(1)",
              "docComment": "/**\n * Find a node's inner data according to id or function.\n *\n * @param condition - id or condition function\n *\n * @returns result node's inner data  @group Data\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getNodeData(condition: "
                },
                {
                  "kind": "Reference",
                  "text": "ID",
                  "canonicalReference": "@antv/graphlib!ID:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "Function",
                  "canonicalReference": "!Function:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "NodeModel",
                  "canonicalReference": "@antv/g6!NodeModel:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "condition",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getNodeData"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#getRelatedEdgesData:member(1)",
              "docComment": "/**\n * Get one-hop edge ids from a start node.\n *\n * @param nodeId - id of the start node\n *\n * @param direction - \n *\n * @returns one-hop edges' data array  @group Data\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getRelatedEdgesData(nodeId: "
                },
                {
                  "kind": "Reference",
                  "text": "ID",
                  "canonicalReference": "@antv/graphlib!ID:type"
                },
                {
                  "kind": "Content",
                  "text": ", direction?: "
                },
                {
                  "kind": "Content",
                  "text": "'in' | 'out' | 'both'"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "EdgeModel",
                  "canonicalReference": "@antv/g6!EdgeModel:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "nodeId",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "direction",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getRelatedEdgesData"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#getRenderBBox:member(1)",
              "docComment": "/**\n * Get the rendering bbox for a node / edge / combo, or the graph (when the id is not assigned).\n *\n * @param id - the id for the node / edge / combo, undefined for the whole graph\n *\n * @param onlyKeyShape - \n *\n * @param isTransient - \n *\n * @returns rendering bounding box. returns false if the item is not exist  @group Item\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getRenderBBox(id: "
                },
                {
                  "kind": "Reference",
                  "text": "ID",
                  "canonicalReference": "@antv/graphlib!ID:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ", onlyKeyShape?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ", isTransient?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "AABB",
                  "canonicalReference": "@antv/g-lite!AABB:class"
                },
                {
                  "kind": "Content",
                  "text": " | false"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "onlyKeyShape",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "isTransient",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getRenderBBox"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#getSize:member(1)",
              "docComment": "/**\n * Get the size of the graph canvas.\n *\n * @returns [width, height]  @group View\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getSize(): "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getSize"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#getSpecification:member(1)",
              "docComment": "/**\n * Get the copy of specs(configurations).\n *\n * @returns graph specs\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getSpecification(): "
                },
                {
                  "kind": "Reference",
                  "text": "Specification",
                  "canonicalReference": "@antv/g6!Specification:interface"
                },
                {
                  "kind": "Content",
                  "text": "<B, T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getSpecification"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#getTypeById:member(1)",
              "docComment": "/**\n * Get item type by id.\n *\n * @param id - \n *\n * @returns 'node' | 'edge' | 'combo'  @group Data\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getTypeById(id: "
                },
                {
                  "kind": "Reference",
                  "text": "ID",
                  "canonicalReference": "@antv/graphlib!ID:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ITEM_TYPE",
                  "canonicalReference": "@antv/g6!~ITEM_TYPE:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getTypeById"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#getViewportByCanvas:member(1)",
              "docComment": "/**\n * Get the canvas dom (viewport) coordinate according to the rendering coordinate.\n *\n * @param Point - canvas dom (viewport) coordinate\n *\n * @param canvasPoint - \n *\n * @returns rendering coordinate  @group View\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getViewportByCanvas(canvasPoint: "
                },
                {
                  "kind": "Reference",
                  "text": "Point",
                  "canonicalReference": "@antv/g6!Point:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Point",
                  "canonicalReference": "@antv/g6!Point:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "canvasPoint",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getViewportByCanvas"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#getViewportCenter:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getViewportCenter(): "
                },
                {
                  "kind": "Reference",
                  "text": "PointLike",
                  "canonicalReference": "@antv/g-lite!PointLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getViewportCenter"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#getZoom:member(1)",
              "docComment": "/**\n * Return the current zoom level of camera.\n *\n * @returns current zoom\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getZoom(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getZoom"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#hideItem:member(1)",
              "docComment": "/**\n * Hide the item(s).\n *\n * @param id - the id for the item to be hidden.\n *\n * @param ids - \n *\n * @param options - \n *\n * @param disableAnimate - whether disable the hidden animations.\n *\n * @param keepKeyShape - whether keep the keyShape.\n *\n * @param keepRelated - whether keep the related nodes for edge.\n *\n * @param  - options.disableAnimate\n *\n * @param  - options.keepKeyShape\n *\n * @param  - options.keepRelated\n *\n * @param  - options.shapeIds  @group Item\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hideItem(ids: "
                },
                {
                  "kind": "Reference",
                  "text": "ID",
                  "canonicalReference": "@antv/graphlib!ID:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "ID",
                  "canonicalReference": "@antv/graphlib!ID:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        disableAnimate?: boolean;\n        keepKeyShape?: boolean;\n        keepRelated?: boolean;\n        shapeIds?: string[];\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "ids",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "hideItem"
            },
            {
              "kind": "Property",
              "canonicalReference": "@antv/g6!Graph#hooks:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hooks: "
                },
                {
                  "kind": "Reference",
                  "text": "Hooks",
                  "canonicalReference": "@antv/g6!~Hooks:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "hooks",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@antv/g6!Graph#labelCanvas:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "labelCanvas: "
                },
                {
                  "kind": "Reference",
                  "text": "Canvas",
                  "canonicalReference": "@antv/g-lite!Canvas:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "labelCanvas",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#layout:member(1)",
              "docComment": "/**\n * Layout the graph (with current configurations if cfg is not assigned).\n *\n * @param options - \n *\n * @param disableAnimate - \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "layout(options?: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "LayoutOptions",
                  "canonicalReference": "@antv/g6!LayoutOptions:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ", disableAnimate?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "disableAnimate",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "layout"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#moveCombo:member(1)",
              "docComment": "/**\n * Move one or more combos a distance (dx, dy) relatively, do not update other styles which leads to better performance than updating positions by updateData. In fact, it changes the succeed nodes positions to affect the combo's position, but not modify the combo's position directly.\n *\n * @param models - new configurations with x and y for every combo, which has id field to indicate the specific item.\n *\n * @param ids - \n *\n * @param dx - the distance alone x-axis to move the combo.\n *\n * @param dy - the distance alone y-axis to move the combo.\n *\n * @param upsertAncestors - whether update the ancestors in the combo tree.\n *\n * @param callback - callback function after move combo done.  @group Combo\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "moveCombo(ids: "
                },
                {
                  "kind": "Reference",
                  "text": "ID",
                  "canonicalReference": "@antv/graphlib!ID:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "ID",
                  "canonicalReference": "@antv/graphlib!ID:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", dx: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", dy: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", upsertAncestors?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ", callback?: "
                },
                {
                  "kind": "Content",
                  "text": "(model: "
                },
                {
                  "kind": "Reference",
                  "text": "NodeModel",
                  "canonicalReference": "@antv/g6!NodeModel:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "EdgeModel",
                  "canonicalReference": "@antv/g6!EdgeModel:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "ComboModel",
                  "canonicalReference": "@antv/g6!ComboModel:type"
                },
                {
                  "kind": "Content",
                  "text": ", canceled?: boolean) => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ComboModel",
                  "canonicalReference": "@antv/g6!ComboModel:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 20,
                "endIndex": 22
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "ids",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "dx",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "dy",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "upsertAncestors",
                  "parameterTypeTokenRange": {
                    "startIndex": 10,
                    "endIndex": 11
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 19
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "moveCombo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#read:member(1)",
              "docComment": "/**\n * Input data and render the graph. If there is old data, diffs and changes it.\n *\n * @param data -  @group Data\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "read(data: "
                },
                {
                  "kind": "Reference",
                  "text": "DataConfig",
                  "canonicalReference": "@antv/g6!DataConfig:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "data",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "read"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#removeBehaviors:member(1)",
              "docComment": "/**\n * Remove behavior(s) from mode(s).\n *\n * @param behaviors - behavior configs with unique key\n *\n * @param behaviorKeys - \n *\n * @param modes - mode names  @group Interaction\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "removeBehaviors(behaviorKeys: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ", modes: "
                },
                {
                  "kind": "Content",
                  "text": "string | string[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "behaviorKeys",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "modes",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "removeBehaviors"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#removeData:member(1)",
              "docComment": "/**\n * Remove one or more node/edge/combo data from the graph.\n *\n * @param itemType - the type the item(s) to be removed.\n *\n * @param id - the id or the ids' array of the items to be removed.\n *\n * @param ids - \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "removeData(itemType: "
                },
                {
                  "kind": "Reference",
                  "text": "ITEM_TYPE",
                  "canonicalReference": "@antv/g6!~ITEM_TYPE:type"
                },
                {
                  "kind": "Content",
                  "text": ", ids: "
                },
                {
                  "kind": "Reference",
                  "text": "ID",
                  "canonicalReference": "@antv/graphlib!ID:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "ID",
                  "canonicalReference": "@antv/graphlib!ID:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "itemType",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "ids",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "removeData"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#removePlugins:member(1)",
              "docComment": "/**\n * Remove plugin(s) from graph.\n *\n * @param pluginKeys -  @group Plugin\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "removePlugins(pluginKeys: "
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "PluginBase",
                  "canonicalReference": "@antv/g6!PluginBase:class"
                },
                {
                  "kind": "Content",
                  "text": " | string)[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "pluginKeys",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "removePlugins"
            },
            {
              "kind": "Property",
              "canonicalReference": "@antv/g6!Graph#rendererType:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rendererType: "
                },
                {
                  "kind": "Reference",
                  "text": "RendererName",
                  "canonicalReference": "@antv/g6!~RendererName:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "rendererType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#rotate:member(1)",
              "docComment": "/**\n * Rotate the graph with a relative angle.\n *\n * @param angle - \n *\n * @param origin - \n *\n * @param effectTiming - \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rotate(angle: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", origin?: "
                },
                {
                  "kind": "Reference",
                  "text": "PointLike",
                  "canonicalReference": "@antv/g-lite!PointLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ", effectTiming?: "
                },
                {
                  "kind": "Reference",
                  "text": "CameraAnimationOptions",
                  "canonicalReference": "@antv/g6!~CameraAnimationOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "angle",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "origin",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "effectTiming",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "rotate"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#rotateTo:member(1)",
              "docComment": "/**\n * Rotate the graph to an absolute angle.\n *\n * @param angle - \n *\n * @param origin - \n *\n * @param effectTiming - \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rotateTo(angle: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", origin?: "
                },
                {
                  "kind": "Reference",
                  "text": "PointLike",
                  "canonicalReference": "@antv/g-lite!PointLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ", effectTiming?: "
                },
                {
                  "kind": "Reference",
                  "text": "CameraAnimationOptions",
                  "canonicalReference": "@antv/g6!~CameraAnimationOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "angle",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "origin",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "effectTiming",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "rotateTo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#setCursor:member(1)",
              "docComment": "/**\n * Set the cursor. But the cursor in item's style has higher priority.\n *\n * @param cursor - \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setCursor(cursor: "
                },
                {
                  "kind": "Reference",
                  "text": "Cursor",
                  "canonicalReference": "@antv/g-lite!Cursor:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "cursor",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setCursor"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#setItemState:member(1)",
              "docComment": "/**\n * Set state for the item.\n *\n * @param item - the item to be set\n *\n * @param state - the state name\n *\n * @param ids - \n *\n * @param states - \n *\n * @param value - state value  @group Item\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setItemState(ids: "
                },
                {
                  "kind": "Reference",
                  "text": "ID",
                  "canonicalReference": "@antv/graphlib!ID:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "ID",
                  "canonicalReference": "@antv/graphlib!ID:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", states: "
                },
                {
                  "kind": "Content",
                  "text": "string | string[]"
                },
                {
                  "kind": "Content",
                  "text": ", value: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "ids",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "states",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setItemState"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#setMode:member(1)",
              "docComment": "/**\n * Switch mode.\n *\n * @param mode - mode name  @group Interaction\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setMode(mode: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "mode",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setMode"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#setSize:member(1)",
              "docComment": "/**\n * Set the size for the graph canvas.\n *\n * @param number - [] [width, height]\n *\n * @param size -  @group View\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setSize(size: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "size",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setSize"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#showItem:member(1)",
              "docComment": "/**\n * Show the item(s).\n *\n * @param item - the item to be shown\n *\n * @param ids - \n *\n * @param options - \n *\n * @param  - options.disableAnimate\n *\n * @param  - options.shapeIds  @group Item\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "showItem(ids: "
                },
                {
                  "kind": "Reference",
                  "text": "ID",
                  "canonicalReference": "@antv/graphlib!ID:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "ID",
                  "canonicalReference": "@antv/graphlib!ID:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        disableAnimate?: boolean;\n        shapeIds?: string | string[];\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "ids",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "showItem"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#stopLayout:member(1)",
              "docComment": "/**\n * Some layout algorithms has many iterations which can be stopped at any time.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "stopLayout(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "stopLayout"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#stopTransformTransition:member(1)",
              "docComment": "/**\n * Stop the current transition of transform immediately.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "stopTransformTransition(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "stopTransformTransition"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#toDataURL:member(1)",
              "docComment": "/**\n * Asynchronously generates a Data URL representation of the canvas content, including background, main content, and transient canvas.\n *\n * @param The - type of the Data URL (e.g., 'image/png', 'image/jpeg').\n *\n * @param type - \n *\n * @returns A Promise that resolves to the Data URL string.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toDataURL(type?: "
                },
                {
                  "kind": "Reference",
                  "text": "DataURLType",
                  "canonicalReference": "@antv/g-lite!DataURLType:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "type",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "toDataURL"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#toFullDataURL:member(1)",
              "docComment": "/**\n * Asynchronously generates a Data URL representation of the full canvas content, including background, main content, and transient canvas, with optional padding.\n *\n * @param type - The type of the Data URL (e.g., 'image/png', 'image/jpeg').\n *\n * @param imageConfig - Configuration options for the image (optional).\n *\n * @param  - imageConfig.padding\n *\n * @returns A Promise that resolves to the Data URL string.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toFullDataURL(type?: "
                },
                {
                  "kind": "Reference",
                  "text": "DataURLType",
                  "canonicalReference": "@antv/g-lite!DataURLType:type"
                },
                {
                  "kind": "Content",
                  "text": ", imageConfig?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        padding?: number | number[];\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<unknown>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "type",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "imageConfig",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "toFullDataURL"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#transform:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "transform(options: "
                },
                {
                  "kind": "Reference",
                  "text": "GraphTransformOptions",
                  "canonicalReference": "@antv/g6!~GraphTransformOptions:type"
                },
                {
                  "kind": "Content",
                  "text": ", effectTiming?: "
                },
                {
                  "kind": "Reference",
                  "text": "CameraAnimationOptions",
                  "canonicalReference": "@antv/g6!~CameraAnimationOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "effectTiming",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "transform"
            },
            {
              "kind": "Property",
              "canonicalReference": "@antv/g6!Graph#transientCanvas:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "transientCanvas: "
                },
                {
                  "kind": "Reference",
                  "text": "Canvas",
                  "canonicalReference": "@antv/g-lite!Canvas:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "transientCanvas",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@antv/g6!Graph#transientLabelCanvas:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "transientLabelCanvas: "
                },
                {
                  "kind": "Reference",
                  "text": "Canvas",
                  "canonicalReference": "@antv/g-lite!Canvas:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "transientLabelCanvas",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#translate:member(1)",
              "docComment": "/**\n * Move the graph with a relative distance under viewport coordinates.\n *\n * @param dx - x of the relative distance\n *\n * @param dy - y of the relative distance\n *\n * @param distance - \n *\n * @param effectTiming - animation configurations\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "translate(distance: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        dx: number;\n        dy: number;\n        dz: number;\n    }>"
                },
                {
                  "kind": "Content",
                  "text": ", effectTiming?: "
                },
                {
                  "kind": "Reference",
                  "text": "CameraAnimationOptions",
                  "canonicalReference": "@antv/g6!~CameraAnimationOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "distance",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "effectTiming",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "translate"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#translateTo:member(1)",
              "docComment": "/**\n * Move the graph to destination under viewport coordinates.\n *\n * @param destination - destination under viewport coordinates.\n *\n * @param  - destination.x\n *\n * @param  - destination.y\n *\n * @param effectTiming - animation configurations\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "translateTo({ x, y }: "
                },
                {
                  "kind": "Reference",
                  "text": "Point",
                  "canonicalReference": "@antv/g6!Point:type"
                },
                {
                  "kind": "Content",
                  "text": ", effectTiming?: "
                },
                {
                  "kind": "Reference",
                  "text": "CameraAnimationOptions",
                  "canonicalReference": "@antv/g6!~CameraAnimationOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "{ x, y }",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "effectTiming",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "translateTo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#updateBehavior:member(1)",
              "docComment": "/**\n * Update a behavior on a mode.\n *\n * @param behavior - behavior configs, whose name indicates the behavior to be updated\n *\n * @param mode - mode name  @group Interaction\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "updateBehavior(behavior: "
                },
                {
                  "kind": "Reference",
                  "text": "BehaviorOptionsOf",
                  "canonicalReference": "@antv/g6!BehaviorOptionsOf:type"
                },
                {
                  "kind": "Content",
                  "text": "<B>"
                },
                {
                  "kind": "Content",
                  "text": ", mode?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "behavior",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "mode",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "updateBehavior"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#updateComboPosition:member(1)",
              "docComment": "/**\n * Update one or more combos' positions, do not update other styles which leads to better performance than updating positions by updateData. In fact, it changes the succeed nodes positions to affect the combo's position, but not modify the combo's position directly.\n *\n * @param models - new configurations with x and y for every combo, which has id field to indicate the specific item.\n *\n * @param upsertAncestors - whether update the ancestors in combo tree.\n *\n * @param disableAnimate - whether disable the animation for this call.\n *\n * @param callback - callback function after update combos done.  @group Data\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "updateComboPosition(models: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "NodeUserModel",
                  "canonicalReference": "@antv/g6!NodeUserModel:type"
                },
                {
                  "kind": "Content",
                  "text": "> | "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ComboUserModel",
                  "canonicalReference": "@antv/g6!ComboUserModel:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "NodeUserModel",
                  "canonicalReference": "@antv/g6!NodeUserModel:type"
                },
                {
                  "kind": "Content",
                  "text": ">[] | "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ComboUserModel",
                  "canonicalReference": "@antv/g6!ComboUserModel:type"
                },
                {
                  "kind": "Content",
                  "text": ">[]>"
                },
                {
                  "kind": "Content",
                  "text": ", upsertAncestors?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ", disableAnimate?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ", callback?: "
                },
                {
                  "kind": "Content",
                  "text": "(model: "
                },
                {
                  "kind": "Reference",
                  "text": "NodeModel",
                  "canonicalReference": "@antv/g6!NodeModel:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "EdgeModel",
                  "canonicalReference": "@antv/g6!EdgeModel:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "ComboModel",
                  "canonicalReference": "@antv/g6!ComboModel:type"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "NodeModel",
                  "canonicalReference": "@antv/g6!NodeModel:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "ComboModel",
                  "canonicalReference": "@antv/g6!ComboModel:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "EdgeModel",
                  "canonicalReference": "@antv/g6!EdgeModel:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "NodeModel",
                  "canonicalReference": "@antv/g6!NodeModel:type"
                },
                {
                  "kind": "Content",
                  "text": "[] | "
                },
                {
                  "kind": "Reference",
                  "text": "EdgeModel",
                  "canonicalReference": "@antv/g6!EdgeModel:type"
                },
                {
                  "kind": "Content",
                  "text": "[] | "
                },
                {
                  "kind": "Reference",
                  "text": "ComboModel",
                  "canonicalReference": "@antv/g6!ComboModel:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 30,
                "endIndex": 42
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "models",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 17
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "upsertAncestors",
                  "parameterTypeTokenRange": {
                    "startIndex": 18,
                    "endIndex": 19
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "disableAnimate",
                  "parameterTypeTokenRange": {
                    "startIndex": 20,
                    "endIndex": 21
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 22,
                    "endIndex": 29
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "updateComboPosition"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#updateData:member(1)",
              "docComment": "/**\n * Update one or more node/edge/combo data on the graph.\n *\n * @param itemType - the type the item(s) to be udated.\n *\n * @param models - update configs.  @group Data\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "updateData(itemType: "
                },
                {
                  "kind": "Reference",
                  "text": "ITEM_TYPE",
                  "canonicalReference": "@antv/g6!~ITEM_TYPE:type"
                },
                {
                  "kind": "Content",
                  "text": ", models: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "NodeUserModel",
                  "canonicalReference": "@antv/g6!NodeUserModel:type"
                },
                {
                  "kind": "Content",
                  "text": "> | "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "EdgeUserModel",
                  "canonicalReference": "@antv/g6!EdgeUserModel:type"
                },
                {
                  "kind": "Content",
                  "text": "> | "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ComboUserModel",
                  "canonicalReference": "@antv/g6!ComboUserModel:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "NodeUserModel",
                  "canonicalReference": "@antv/g6!NodeUserModel:type"
                },
                {
                  "kind": "Content",
                  "text": ">[] | "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "EdgeUserModel",
                  "canonicalReference": "@antv/g6!EdgeUserModel:type"
                },
                {
                  "kind": "Content",
                  "text": ">[] | "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ComboUserModel",
                  "canonicalReference": "@antv/g6!ComboUserModel:type"
                },
                {
                  "kind": "Content",
                  "text": ">[]>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "NodeModel",
                  "canonicalReference": "@antv/g6!NodeModel:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "EdgeModel",
                  "canonicalReference": "@antv/g6!EdgeModel:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "ComboModel",
                  "canonicalReference": "@antv/g6!ComboModel:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "NodeModel",
                  "canonicalReference": "@antv/g6!NodeModel:type"
                },
                {
                  "kind": "Content",
                  "text": "[] | "
                },
                {
                  "kind": "Reference",
                  "text": "EdgeModel",
                  "canonicalReference": "@antv/g6!EdgeModel:type"
                },
                {
                  "kind": "Content",
                  "text": "[] | "
                },
                {
                  "kind": "Reference",
                  "text": "ComboModel",
                  "canonicalReference": "@antv/g6!ComboModel:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 28,
                "endIndex": 40
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "itemType",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "models",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 27
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "updateData"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#updateMapper:member(1)",
              "docComment": "/**\n * Update the item display mapper for a specific item type.\n *\n * @param type - The type of item (node, edge, or combo).\n *\n * @param mapper - The mapper to be updated.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "updateMapper(type: "
                },
                {
                  "kind": "Reference",
                  "text": "ITEM_TYPE",
                  "canonicalReference": "@antv/g6!~ITEM_TYPE:type"
                },
                {
                  "kind": "Content",
                  "text": ", mapper: "
                },
                {
                  "kind": "Reference",
                  "text": "NodeMapper",
                  "canonicalReference": "@antv/g6!~NodeMapper:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "EdgeMapper",
                  "canonicalReference": "@antv/g6!~EdgeMapper:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "ComboMapper",
                  "canonicalReference": "@antv/g6!~ComboMapper:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "type",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "mapper",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "updateMapper"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#updateNodePosition:member(1)",
              "docComment": "/**\n * Update one or more nodes' positions, do not update other styles which leads to better performance than updating positions by updateData.\n *\n * @param models - new configurations with x and y for every node, which has id field to indicate the specific item.\n *\n * @param upsertAncestors - whether update the ancestors in combo tree.\n *\n * @param disableAnimate - whether disable the animation for this call.\n *\n * @param callback - callback function after update nodes done.  @group Data\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "updateNodePosition(models: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "NodeUserModel",
                  "canonicalReference": "@antv/g6!NodeUserModel:type"
                },
                {
                  "kind": "Content",
                  "text": "> | "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ComboUserModel",
                  "canonicalReference": "@antv/g6!ComboUserModel:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "NodeUserModel",
                  "canonicalReference": "@antv/g6!NodeUserModel:type"
                },
                {
                  "kind": "Content",
                  "text": ">[] | "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ComboUserModel",
                  "canonicalReference": "@antv/g6!ComboUserModel:type"
                },
                {
                  "kind": "Content",
                  "text": ">[]>"
                },
                {
                  "kind": "Content",
                  "text": ", upsertAncestors?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ", disableAnimate?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ", callback?: "
                },
                {
                  "kind": "Content",
                  "text": "(model: "
                },
                {
                  "kind": "Reference",
                  "text": "NodeModel",
                  "canonicalReference": "@antv/g6!NodeModel:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "EdgeModel",
                  "canonicalReference": "@antv/g6!EdgeModel:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "ComboModel",
                  "canonicalReference": "@antv/g6!ComboModel:type"
                },
                {
                  "kind": "Content",
                  "text": ", canceled?: boolean) => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "NodeModel",
                  "canonicalReference": "@antv/g6!NodeModel:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "ComboModel",
                  "canonicalReference": "@antv/g6!ComboModel:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "EdgeModel",
                  "canonicalReference": "@antv/g6!EdgeModel:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "NodeModel",
                  "canonicalReference": "@antv/g6!NodeModel:type"
                },
                {
                  "kind": "Content",
                  "text": "[] | "
                },
                {
                  "kind": "Reference",
                  "text": "EdgeModel",
                  "canonicalReference": "@antv/g6!EdgeModel:type"
                },
                {
                  "kind": "Content",
                  "text": "[] | "
                },
                {
                  "kind": "Reference",
                  "text": "ComboModel",
                  "canonicalReference": "@antv/g6!ComboModel:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 30,
                "endIndex": 42
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "models",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 17
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "upsertAncestors",
                  "parameterTypeTokenRange": {
                    "startIndex": 18,
                    "endIndex": 19
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "disableAnimate",
                  "parameterTypeTokenRange": {
                    "startIndex": 20,
                    "endIndex": 21
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 22,
                    "endIndex": 29
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "updateNodePosition"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#updatePlugin:member(1)",
              "docComment": "/**\n * Update a plugin of the graph.\n *\n * @param plugin - plugin configs, whose key indicates the behavior to be updated  @group Interaction\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "updatePlugin(plugin: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        key: string;\n        type: string;\n        [cfg: string]: unknown;\n    } | "
                },
                {
                  "kind": "Reference",
                  "text": "PluginBase",
                  "canonicalReference": "@antv/g6!PluginBase:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "plugin",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "updatePlugin"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#updateSpecification:member(1)",
              "docComment": "/**\n * Update the specs(configurations).\n *\n * @param spec - \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "updateSpecification(spec: "
                },
                {
                  "kind": "Reference",
                  "text": "Specification",
                  "canonicalReference": "@antv/g6!Specification:interface"
                },
                {
                  "kind": "Content",
                  "text": "<B, T>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Specification",
                  "canonicalReference": "@antv/g6!Specification:interface"
                },
                {
                  "kind": "Content",
                  "text": "<B, T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "spec",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "updateSpecification"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#updateStateConfig:member(1)",
              "docComment": "/**\n * Updates the state configuration for the specified item type, corresponds to the nodeState, edgeState, or comboState on the graph spec.\n *\n * @param itemType - The type of item (node, edge, or combo).\n *\n * @param stateConfig - The state configuration to update.\n *\n * @param updateType - The type of update ('mergeReplace' or 'replace'). Default is 'mergeReplace'.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "updateStateConfig(itemType: "
                },
                {
                  "kind": "Reference",
                  "text": "ITEM_TYPE",
                  "canonicalReference": "@antv/g6!~ITEM_TYPE:type"
                },
                {
                  "kind": "Content",
                  "text": ", stateConfig: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [stateName: string]: ((data: "
                },
                {
                  "kind": "Reference",
                  "text": "NodeModel",
                  "canonicalReference": "@antv/g6!NodeModel:type"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "NodeDisplayModel",
                  "canonicalReference": "@antv/g6!NodeDisplayModel:type"
                },
                {
                  "kind": "Content",
                  "text": ") | "
                },
                {
                  "kind": "Reference",
                  "text": "NodeShapesEncode",
                  "canonicalReference": "@antv/g6!NodeShapesEncode:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n    } | {\n        [stateName: string]: ((data: "
                },
                {
                  "kind": "Reference",
                  "text": "EdgeModel",
                  "canonicalReference": "@antv/g6!EdgeModel:type"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "EdgeDisplayModel",
                  "canonicalReference": "@antv/g6!EdgeDisplayModel:type"
                },
                {
                  "kind": "Content",
                  "text": ") | "
                },
                {
                  "kind": "Reference",
                  "text": "EdgeShapesEncode",
                  "canonicalReference": "@antv/g6!EdgeShapesEncode:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n    } | {\n        [stateName: string]: ((data: "
                },
                {
                  "kind": "Reference",
                  "text": "ComboModel",
                  "canonicalReference": "@antv/g6!ComboModel:type"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "ComboDisplayModel",
                  "canonicalReference": "@antv/g6!ComboDisplayModel:type"
                },
                {
                  "kind": "Content",
                  "text": ") | "
                },
                {
                  "kind": "Reference",
                  "text": "ComboShapesEncode",
                  "canonicalReference": "@antv/g6!ComboShapesEncode:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ", updateType?: "
                },
                {
                  "kind": "Content",
                  "text": "'mergeReplace' | 'replace'"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 25,
                "endIndex": 26
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "itemType",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "stateConfig",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 22
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "updateType",
                  "parameterTypeTokenRange": {
                    "startIndex": 23,
                    "endIndex": 24
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "updateStateConfig"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#updateTheme:member(1)",
              "docComment": "/**\n * Update the theme specs (configurations).\n *\n * @param theme - \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "updateTheme(theme: "
                },
                {
                  "kind": "Reference",
                  "text": "ThemeOptionsOf",
                  "canonicalReference": "@antv/g6!~ThemeOptionsOf:type"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "theme",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "updateTheme"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#zoom:member(1)",
              "docComment": "/**\n * Zoom the graph with a relative ratio.\n *\n * @param ratio - relative ratio to zoom\n *\n * @param origin - origin under viewport coordinates.\n *\n * @param effectTiming - animation configurations\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "zoom(ratio: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", origin?: "
                },
                {
                  "kind": "Reference",
                  "text": "Point",
                  "canonicalReference": "@antv/g6!Point:type"
                },
                {
                  "kind": "Content",
                  "text": ", effectTiming?: "
                },
                {
                  "kind": "Reference",
                  "text": "CameraAnimationOptions",
                  "canonicalReference": "@antv/g6!~CameraAnimationOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "ratio",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "origin",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "effectTiming",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "zoom"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!Graph#zoomTo:member(1)",
              "docComment": "/**\n * Zoom the graph to a specified ratio.\n *\n * @param zoom - specified ratio\n *\n * @param origin - zoom center\n *\n * @param effectTiming - animation configurations\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "zoomTo(zoom: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", origin?: "
                },
                {
                  "kind": "Reference",
                  "text": "PointLike",
                  "canonicalReference": "@antv/g-lite!PointLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ", effectTiming?: "
                },
                {
                  "kind": "Reference",
                  "text": "CameraAnimationOptions",
                  "canonicalReference": "@antv/g6!~CameraAnimationOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "zoom",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "origin",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "effectTiming",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "zoomTo"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 9,
            "endIndex": 10
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@antv/g6!GraphCore:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type GraphCore = "
            },
            {
              "kind": "Reference",
              "text": "GraphLib",
              "canonicalReference": "@antv/graphlib!Graph:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "NodeModelData",
              "canonicalReference": "@antv/g6!NodeModelData:type"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "EdgeModelData",
              "canonicalReference": "@antv/g6!EdgeModelData:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/data.d.ts",
          "releaseTag": "Public",
          "name": "GraphCore",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@antv/g6!GraphData:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface GraphData "
            }
          ],
          "fileUrlPath": "lib/types/data.d.ts",
          "releaseTag": "Public",
          "name": "GraphData",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!GraphData#combos:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "combos?: "
                },
                {
                  "kind": "Reference",
                  "text": "ComboUserModel",
                  "canonicalReference": "@antv/g6!ComboUserModel:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "combos",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!GraphData#edges:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "edges?: "
                },
                {
                  "kind": "Reference",
                  "text": "EdgeUserModel",
                  "canonicalReference": "@antv/g6!EdgeUserModel:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "edges",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!GraphData#nodes:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "nodes?: "
                },
                {
                  "kind": "Reference",
                  "text": "NodeUserModel",
                  "canonicalReference": "@antv/g6!NodeUserModel:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "nodes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@antv/g6!IAnimate:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IAnimate "
            }
          ],
          "fileUrlPath": "lib/types/animate.d.ts",
          "releaseTag": "Public",
          "name": "IAnimate",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!IAnimate#delay:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "delay?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "delay",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!IAnimate#duration:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "duration?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "duration",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!IAnimate#easing:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "easing?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "easing",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!IAnimate#fields:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fields?: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "fields",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!IAnimate#iterations:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "iterations?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "iterations",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!IAnimate#order:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "order?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "order",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!IAnimate#shapeId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "shapeId?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "shapeId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@antv/g6!IAnimates:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IAnimates "
            }
          ],
          "fileUrlPath": "lib/types/animate.d.ts",
          "releaseTag": "Public",
          "name": "IAnimates",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!IAnimates#buildIn:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "buildIn?: "
                },
                {
                  "kind": "Reference",
                  "text": "IAnimate",
                  "canonicalReference": "@antv/g6!IAnimate:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "buildIn",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!IAnimates#buildOut:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "buildOut?: "
                },
                {
                  "kind": "Reference",
                  "text": "IAnimate",
                  "canonicalReference": "@antv/g6!IAnimate:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "buildOut",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!IAnimates#hide:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hide?: "
                },
                {
                  "kind": "Reference",
                  "text": "IAnimate",
                  "canonicalReference": "@antv/g6!IAnimate:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "hide",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!IAnimates#show:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "show?: "
                },
                {
                  "kind": "Reference",
                  "text": "IAnimate",
                  "canonicalReference": "@antv/g6!IAnimate:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "show",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!IAnimates#update:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "update?: "
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "IAnimate",
                  "canonicalReference": "@antv/g6!IAnimate:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "IStateAnimate",
                  "canonicalReference": "@antv/g6!~IStateAnimate:interface"
                },
                {
                  "kind": "Content",
                  "text": ")[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "update",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@antv/g6!ICanvasEventType:type",
          "docComment": "/**\n * Event type union\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ICanvasEventType = "
            },
            {
              "kind": "Content",
              "text": "`${"
            },
            {
              "kind": "Reference",
              "text": "CANVAS_EVENT_TYPE",
              "canonicalReference": "@antv/g6!~CANVAS_EVENT_TYPE:enum"
            },
            {
              "kind": "Content",
              "text": "}`"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/event.d.ts",
          "releaseTag": "Public",
          "name": "ICanvasEventType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@antv/g6!IG6GraphEvent:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IG6GraphEvent extends "
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "FederatedPointerEvent",
              "canonicalReference": "@antv/g-lite!FederatedPointerEvent:class"
            },
            {
              "kind": "Content",
              "text": ", 'currentTarget'>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "lib/types/event.d.ts",
          "releaseTag": "Public",
          "name": "IG6GraphEvent",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!IG6GraphEvent#currentTarget:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "currentTarget: "
                },
                {
                  "kind": "Reference",
                  "text": "Graph",
                  "canonicalReference": "@antv/g6!Graph:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "currentTarget",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!IG6GraphEvent#gEvent:member",
              "docComment": "/**\n * Original event emitted by G\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "gEvent: "
                },
                {
                  "kind": "Reference",
                  "text": "Event",
                  "canonicalReference": "!Event:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "gEvent",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!IG6GraphEvent#itemId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "itemId: "
                },
                {
                  "kind": "Reference",
                  "text": "ID",
                  "canonicalReference": "@antv/graphlib!ID:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "itemId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!IG6GraphEvent#itemType:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "itemType: "
                },
                {
                  "kind": "Content",
                  "text": "'node' | 'edge' | 'combo' | 'canvas'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "itemType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!IG6GraphEvent#key:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "key?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "key",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@antv/g6!ImmediatelyInvokedLayoutOptions:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ImmediatelyInvokedLayoutOptions = "
            },
            {
              "kind": "Content",
              "text": "{\n    execute: (graph: "
            },
            {
              "kind": "Reference",
              "text": "GraphCore",
              "canonicalReference": "@antv/g6!GraphCore:type"
            },
            {
              "kind": "Content",
              "text": ", options?: any) => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "LayoutMapping",
              "canonicalReference": "@antv/layout!LayoutMapping:type"
            },
            {
              "kind": "Content",
              "text": ">;\n} & "
            },
            {
              "kind": "Reference",
              "text": "Animatable",
              "canonicalReference": "@antv/g6!~Animatable_2:type"
            },
            {
              "kind": "Content",
              "text": " & "
            },
            {
              "kind": "Reference",
              "text": "PresetLayoutOptions",
              "canonicalReference": "@antv/g6!~PresetLayoutOptions:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/layout.d.ts",
          "releaseTag": "Public",
          "name": "ImmediatelyInvokedLayoutOptions",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 11
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@antv/g6!IPluginBaseConfig:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IPluginBaseConfig "
            }
          ],
          "fileUrlPath": "lib/types/plugin.d.ts",
          "releaseTag": "Public",
          "name": "IPluginBaseConfig",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "IndexSignature",
              "canonicalReference": "@antv/g6!IPluginBaseConfig:index(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "[key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "]: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!IPluginBaseConfig#className:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "className?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "className",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!IPluginBaseConfig#container:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "container?: "
                },
                {
                  "kind": "Reference",
                  "text": "HTMLElement",
                  "canonicalReference": "!HTMLElement:interface"
                },
                {
                  "kind": "Content",
                  "text": " | string | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "container",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!IPluginBaseConfig#graph:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "graph?: "
                },
                {
                  "kind": "Reference",
                  "text": "Graph",
                  "canonicalReference": "@antv/g6!Graph:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "graph",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@antv/g6!LayoutOptions:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type LayoutOptions = "
            },
            {
              "kind": "Reference",
              "text": "STDLayoutOptions",
              "canonicalReference": "@antv/g6!STDLayoutOptions:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "ImmediatelyInvokedLayoutOptions",
              "canonicalReference": "@antv/g6!ImmediatelyInvokedLayoutOptions:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/layout.d.ts",
          "releaseTag": "Public",
          "name": "LayoutOptions",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@antv/g6!NodeDisplayModel:type",
          "docComment": "/**\n * Displayed model, only for drawing and not received by users.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type NodeDisplayModel = "
            },
            {
              "kind": "Reference",
              "text": "GNode",
              "canonicalReference": "@antv/graphlib!Node:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "NodeDisplayModelData",
              "canonicalReference": "@antv/g6!~NodeDisplayModelData:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/node.d.ts",
          "releaseTag": "Public",
          "name": "NodeDisplayModel",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@antv/g6!NodeEncode:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface NodeEncode extends "
            },
            {
              "kind": "Reference",
              "text": "NodeShapesEncode",
              "canonicalReference": "@antv/g6!NodeShapesEncode:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "lib/types/node.d.ts",
          "releaseTag": "Public",
          "name": "NodeEncode",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!NodeEncode#animates:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "animates?: "
                },
                {
                  "kind": "Reference",
                  "text": "IAnimates",
                  "canonicalReference": "@antv/g6!IAnimates:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "animates",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!NodeEncode#lodLevels:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "lodLevels?: "
                },
                {
                  "kind": "Reference",
                  "text": "LodLevel",
                  "canonicalReference": "@antv/g6!~LodLevel:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "lodLevels",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!NodeEncode#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type?: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "Encode",
                  "canonicalReference": "@antv/g6!~Encode:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@antv/g6!NodeLabelPosition:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type NodeLabelPosition = "
            },
            {
              "kind": "Content",
              "text": "'bottom' | 'center' | 'top' | 'left' | 'right'"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/node.d.ts",
          "releaseTag": "Public",
          "name": "NodeLabelPosition",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@antv/g6!NodeModel:type",
          "docComment": "/**\n * Inner node model, clone and transform from user data.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type NodeModel = "
            },
            {
              "kind": "Reference",
              "text": "GNode",
              "canonicalReference": "@antv/graphlib!Node:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "NodeModelData",
              "canonicalReference": "@antv/g6!NodeModelData:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/node.d.ts",
          "releaseTag": "Public",
          "name": "NodeModel",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@antv/g6!NodeModelData:type",
          "docComment": "/**\n * Data in inner model. Same format to the user data.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type NodeModelData = "
            },
            {
              "kind": "Reference",
              "text": "NodeUserModelData",
              "canonicalReference": "@antv/g6!~NodeUserModelData:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/node.d.ts",
          "releaseTag": "Public",
          "name": "NodeModelData",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@antv/g6!NodeShapesEncode:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface NodeShapesEncode extends "
            },
            {
              "kind": "Reference",
              "text": "ShapesEncode",
              "canonicalReference": "@antv/g6!~ShapesEncode:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "lib/types/node.d.ts",
          "releaseTag": "Public",
          "name": "NodeShapesEncode",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!NodeShapesEncode#anchorShapes:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "anchorShapes?: "
                },
                {
                  "kind": "Reference",
                  "text": "ShapeAttrEncode",
                  "canonicalReference": "@antv/g6!~ShapeAttrEncode:interface"
                },
                {
                  "kind": "Content",
                  "text": "[] | "
                },
                {
                  "kind": "Reference",
                  "text": "Encode",
                  "canonicalReference": "@antv/g6!~Encode:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ShapeStyle",
                  "canonicalReference": "@antv/g6!~ShapeStyle:type"
                },
                {
                  "kind": "Content",
                  "text": "[]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "anchorShapes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!NodeShapesEncode#badgeShapes:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "badgeShapes?: "
                },
                {
                  "kind": "Reference",
                  "text": "ShapeAttrEncode",
                  "canonicalReference": "@antv/g6!~ShapeAttrEncode:interface"
                },
                {
                  "kind": "Content",
                  "text": "[] | "
                },
                {
                  "kind": "Reference",
                  "text": "Encode",
                  "canonicalReference": "@antv/g6!~Encode:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ShapeStyle",
                  "canonicalReference": "@antv/g6!~ShapeStyle:type"
                },
                {
                  "kind": "Content",
                  "text": "[]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "badgeShapes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!NodeShapesEncode#labelBackgroundShape:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "labelBackgroundShape?: "
                },
                {
                  "kind": "Reference",
                  "text": "ShapeAttrEncode",
                  "canonicalReference": "@antv/g6!~ShapeAttrEncode:interface"
                },
                {
                  "kind": "Content",
                  "text": "[] | "
                },
                {
                  "kind": "Reference",
                  "text": "Encode",
                  "canonicalReference": "@antv/g6!~Encode:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ShapeStyle",
                  "canonicalReference": "@antv/g6!~ShapeStyle:type"
                },
                {
                  "kind": "Content",
                  "text": "[]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "labelBackgroundShape",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!NodeShapesEncode#labelShape:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "labelShape?: "
                },
                {
                  "kind": "Reference",
                  "text": "NodeLabelShapeAttrEncode",
                  "canonicalReference": "@antv/g6!~NodeLabelShapeAttrEncode:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "Encode",
                  "canonicalReference": "@antv/g6!~Encode:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ShapeStyle",
                  "canonicalReference": "@antv/g6!~ShapeStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "labelShape",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@antv/g6!NodeShapeStyles:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface NodeShapeStyles extends "
            },
            {
              "kind": "Reference",
              "text": "ItemShapeStyles",
              "canonicalReference": "@antv/g6!~ItemShapeStyles:type"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "lib/types/node.d.ts",
          "releaseTag": "Public",
          "name": "NodeShapeStyles",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!NodeShapeStyles#anchorShapes:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "anchorShapes?: "
                },
                {
                  "kind": "Reference",
                  "text": "ShapeStyle",
                  "canonicalReference": "@antv/g6!~ShapeStyle:type"
                },
                {
                  "kind": "Content",
                  "text": " & {\n        [key: number]: "
                },
                {
                  "kind": "Reference",
                  "text": "ShapeStyle",
                  "canonicalReference": "@antv/g6!~ShapeStyle:type"
                },
                {
                  "kind": "Content",
                  "text": " & {\n            position?: 'top' | 'left' | 'bottom' | 'right' | [number, number];\n        };\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "anchorShapes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!NodeShapeStyles#badgeShapes:member",
              "docComment": "/**\n * Style of the badges to show on the node.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "badgeShapes?: "
                },
                {
                  "kind": "Reference",
                  "text": "ShapeStyle",
                  "canonicalReference": "@antv/g6!~ShapeStyle:type"
                },
                {
                  "kind": "Content",
                  "text": " & {\n        color?: string;\n        palette?: string[];\n        textColor?: string;\n        [key: number]: "
                },
                {
                  "kind": "Reference",
                  "text": "ShapeStyle",
                  "canonicalReference": "@antv/g6!~ShapeStyle:type"
                },
                {
                  "kind": "Content",
                  "text": " & {\n            position?: "
                },
                {
                  "kind": "Reference",
                  "text": "IBadgePosition",
                  "canonicalReference": "@antv/g6!~IBadgePosition:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n            color?: string;\n            textColor?: string;\n        };\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "badgeShapes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!NodeShapeStyles#labelBackgroundShape:member",
              "docComment": "/**\n * The background style of the label\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "labelBackgroundShape?: "
                },
                {
                  "kind": "Reference",
                  "text": "ShapeStyle",
                  "canonicalReference": "@antv/g6!~ShapeStyle:type"
                },
                {
                  "kind": "Content",
                  "text": " & {\n        padding?: number | number[];\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "labelBackgroundShape",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!NodeShapeStyles#labelShape:member",
              "docComment": "/**\n * Style of the text to show on the node.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "labelShape?: "
                },
                {
                  "kind": "Reference",
                  "text": "ShapeStyle",
                  "canonicalReference": "@antv/g6!~ShapeStyle:type"
                },
                {
                  "kind": "Content",
                  "text": " & {\n        position?: 'top' | 'bottom' | 'left' | 'right' | 'center';\n        offsetX?: number;\n        offsetY?: number;\n        offsetZ?: number;\n        maxWidth?: string | number;\n        angle?: number;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "labelShape",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@antv/g6!NodeUserModel:type",
          "docComment": "/**\n * User input model.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type NodeUserModel = "
            },
            {
              "kind": "Reference",
              "text": "GNode",
              "canonicalReference": "@antv/graphlib!Node:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "NodeUserModelData",
              "canonicalReference": "@antv/g6!~NodeUserModelData:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/node.d.ts",
          "releaseTag": "Public",
          "name": "NodeUserModel",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@antv/g6!PluginBase:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class Plugin "
            }
          ],
          "fileUrlPath": "lib/types/plugin.d.ts",
          "releaseTag": "Public",
          "isAbstract": true,
          "name": "PluginBase",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@antv/g6!PluginBase:constructor(1)",
              "docComment": "/**\n * Constructor for the Plugin Base Class.\n *\n * @param options - options for the plugin\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(options?: "
                },
                {
                  "kind": "Reference",
                  "text": "IPluginBaseConfig",
                  "canonicalReference": "@antv/g6!IPluginBaseConfig:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!PluginBase#destroy:member(1)",
              "docComment": "/**\n * Destroy method, should be implemented by the plugin.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "destroy(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "destroy"
            },
            {
              "kind": "Property",
              "canonicalReference": "@antv/g6!PluginBase#destroyed:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "destroyed: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "destroyed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!PluginBase#getDefaultCfgs:member(1)",
              "docComment": "/**\n * Get the default options of the plugin.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getDefaultCfgs(): "
                },
                {
                  "kind": "Content",
                  "text": "{}"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getDefaultCfgs"
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!PluginBase#getEvents:member(1)",
              "docComment": "/**\n * Returns the key(graph event name) value(listener) map. Should be implemented by the plugin.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getEvents(): "
                },
                {
                  "kind": "Content",
                  "text": "{}"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getEvents"
            },
            {
              "kind": "Property",
              "canonicalReference": "@antv/g6!PluginBase#graph:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "graph: "
                },
                {
                  "kind": "Reference",
                  "text": "Graph",
                  "canonicalReference": "@antv/g6!Graph:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "graph",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!PluginBase#init:member(1)",
              "docComment": "/**\n * Init.\n *\n * @param graph - \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "init(graph: "
                },
                {
                  "kind": "Reference",
                  "text": "Graph",
                  "canonicalReference": "@antv/g6!Graph:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "graph",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "init"
            },
            {
              "kind": "Property",
              "canonicalReference": "@antv/g6!PluginBase#key:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "key",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@antv/g6!PluginBase#options:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "options: "
                },
                {
                  "kind": "Reference",
                  "text": "IPluginBaseConfig",
                  "canonicalReference": "@antv/g6!IPluginBaseConfig:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "options",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@antv/g6!PluginBase.required:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static required: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "required",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@antv/g6!PluginBase.type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static type: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@antv/g6!PluginBase#updateCfgs:member(1)",
              "docComment": "/**\n * Update the options for the plugin.\n *\n * @param options - \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "updateCfgs(options?: "
                },
                {
                  "kind": "Reference",
                  "text": "IPluginBaseConfig",
                  "canonicalReference": "@antv/g6!IPluginBaseConfig:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "updateCfgs"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@antv/g6!Point:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type Point = "
            },
            {
              "kind": "Content",
              "text": "{\n    x: number;\n    y: number;\n    z?: number;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/common.d.ts",
          "releaseTag": "Public",
          "name": "Point",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@antv/g6!register:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "register: "
            },
            {
              "kind": "Content",
              "text": "any"
            }
          ],
          "fileUrlPath": "lib/plugin/register.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "register",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@antv/g6!Specification:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface Specification<B extends "
            },
            {
              "kind": "Reference",
              "text": "BehaviorRegistry",
              "canonicalReference": "@antv/g6!BehaviorRegistry:interface"
            },
            {
              "kind": "Content",
              "text": ", T extends "
            },
            {
              "kind": "Reference",
              "text": "ThemeSolverRegistry",
              "canonicalReference": "@antv/g6!~ThemeSolverRegistry:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "fileUrlPath": "lib/types/spec.d.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "B",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "Specification",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!Specification#animate:member",
              "docComment": "/**\n * global animate\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "animate?: "
                },
                {
                  "kind": "Reference",
                  "text": "AnimateCfg",
                  "canonicalReference": "@antv/g6!AnimateCfg:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "animate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!Specification#autoFit:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "autoFit?: "
                },
                {
                  "kind": "Content",
                  "text": "'view' | 'center' | {\n        type: 'view';\n        padding?: "
                },
                {
                  "kind": "Reference",
                  "text": "Padding",
                  "canonicalReference": "@antv/g6!~Padding:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        rules?: "
                },
                {
                  "kind": "Reference",
                  "text": "FitViewRules",
                  "canonicalReference": "@antv/g6!~FitViewRules:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n        effectTiming?: "
                },
                {
                  "kind": "Reference",
                  "text": "CameraAnimationOptions",
                  "canonicalReference": "@antv/g6!~CameraAnimationOptions:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    } | {\n        type: 'center';\n        effectTiming?: "
                },
                {
                  "kind": "Reference",
                  "text": "CameraAnimationOptions",
                  "canonicalReference": "@antv/g6!~CameraAnimationOptions:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    } | {\n        type: 'position';\n        position: "
                },
                {
                  "kind": "Reference",
                  "text": "Point",
                  "canonicalReference": "@antv/g6!Point:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        alignment?: "
                },
                {
                  "kind": "Reference",
                  "text": "GraphAlignment",
                  "canonicalReference": "@antv/g6!~GraphAlignment:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        effectTiming?: "
                },
                {
                  "kind": "Reference",
                  "text": "CameraAnimationOptions",
                  "canonicalReference": "@antv/g6!~CameraAnimationOptions:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "autoFit",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 16
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!Specification#backgroundCanvas:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "backgroundCanvas?: "
                },
                {
                  "kind": "Reference",
                  "text": "Canvas",
                  "canonicalReference": "@antv/g-lite!Canvas:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "backgroundCanvas",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!Specification#canvas:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "canvas?: "
                },
                {
                  "kind": "Reference",
                  "text": "Canvas",
                  "canonicalReference": "@antv/g-lite!Canvas:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "canvas",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!Specification#combo:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "combo?: "
                },
                {
                  "kind": "Reference",
                  "text": "ComboMapper",
                  "canonicalReference": "@antv/g6!~ComboMapper:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "combo",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!Specification#comboState:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "comboState?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [stateName: string]: ((data: "
                },
                {
                  "kind": "Reference",
                  "text": "ComboModel",
                  "canonicalReference": "@antv/g6!ComboModel:type"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "ComboDisplayModel",
                  "canonicalReference": "@antv/g6!ComboDisplayModel:type"
                },
                {
                  "kind": "Content",
                  "text": ") | "
                },
                {
                  "kind": "Reference",
                  "text": "ComboShapesEncode",
                  "canonicalReference": "@antv/g6!ComboShapesEncode:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "comboState",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!Specification#container:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "container?: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "HTMLElement",
                  "canonicalReference": "!HTMLElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "container",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!Specification#data:member",
              "docComment": "/**\n * data\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "data?: "
                },
                {
                  "kind": "Reference",
                  "text": "DataConfig",
                  "canonicalReference": "@antv/g6!DataConfig:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "data",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!Specification#edge:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "edge?: "
                },
                {
                  "kind": "Reference",
                  "text": "EdgeMapper",
                  "canonicalReference": "@antv/g6!~EdgeMapper:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "edge",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!Specification#edgeState:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "edgeState?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [stateName: string]: ((data: "
                },
                {
                  "kind": "Reference",
                  "text": "EdgeModel",
                  "canonicalReference": "@antv/g6!EdgeModel:type"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "EdgeDisplayModel",
                  "canonicalReference": "@antv/g6!EdgeDisplayModel:type"
                },
                {
                  "kind": "Content",
                  "text": ") | "
                },
                {
                  "kind": "Reference",
                  "text": "EdgeShapesEncode",
                  "canonicalReference": "@antv/g6!EdgeShapesEncode:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "edgeState",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!Specification#height:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "height?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "height",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!Specification#labelCanvas:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "labelCanvas?: "
                },
                {
                  "kind": "Reference",
                  "text": "Canvas",
                  "canonicalReference": "@antv/g-lite!Canvas:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "labelCanvas",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!Specification#layout:member",
              "docComment": "/**\n * layout\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "layout?: "
                },
                {
                  "kind": "Reference",
                  "text": "LayoutOptions",
                  "canonicalReference": "@antv/g6!LayoutOptions:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "LayoutOptions",
                  "canonicalReference": "@antv/g6!LayoutOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "layout",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!Specification#mode:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mode?: "
                },
                {
                  "kind": "Content",
                  "text": "'default' | string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "mode",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!Specification#modes:member",
              "docComment": "/**\n * interaction\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "modes?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [mode: string]: "
                },
                {
                  "kind": "Reference",
                  "text": "BehaviorOptionsOf",
                  "canonicalReference": "@antv/g6!BehaviorOptionsOf:type"
                },
                {
                  "kind": "Content",
                  "text": "<B>[];\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "modes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!Specification#node:member",
              "docComment": "/**\n * item\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "node?: "
                },
                {
                  "kind": "Reference",
                  "text": "NodeMapper",
                  "canonicalReference": "@antv/g6!~NodeMapper:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "node",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!Specification#nodeState:member",
              "docComment": "/**\n * item state styles\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "nodeState?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [stateName: string]: ((data: "
                },
                {
                  "kind": "Reference",
                  "text": "NodeModel",
                  "canonicalReference": "@antv/g6!NodeModel:type"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "NodeDisplayModel",
                  "canonicalReference": "@antv/g6!NodeDisplayModel:type"
                },
                {
                  "kind": "Content",
                  "text": ") | "
                },
                {
                  "kind": "Reference",
                  "text": "NodeShapesEncode",
                  "canonicalReference": "@antv/g6!NodeShapesEncode:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "nodeState",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!Specification#optimize:member",
              "docComment": "/**\n * Global optimize configuration.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "optimize?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        tileFirstRender?: boolean | number;\n        tileFirstRenderSize?: number;\n        tileBehavior?: boolean | number;\n        tileBehaviorSize?: number;\n        tileLodSize?: number;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "optimize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!Specification#plugins:member",
              "docComment": "/**\n * free plugins\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "plugins?: "
                },
                {
                  "kind": "Content",
                  "text": "(string | {\n        key: string;\n        type: string;\n        [cfgName: string]: unknown;\n    } | "
                },
                {
                  "kind": "Reference",
                  "text": "Plugin",
                  "canonicalReference": "@antv/g6!PluginBase:class"
                },
                {
                  "kind": "Content",
                  "text": ")[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "plugins",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!Specification#renderer:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "renderer?: "
                },
                {
                  "kind": "Reference",
                  "text": "RendererName",
                  "canonicalReference": "@antv/g6!~RendererName:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        type: "
                },
                {
                  "kind": "Reference",
                  "text": "RendererName",
                  "canonicalReference": "@antv/g6!~RendererName:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        pixelRatio: number;\n        headless: boolean;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "renderer",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!Specification#theme:member",
              "docComment": "/**\n * theme\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "theme?: "
                },
                {
                  "kind": "Reference",
                  "text": "ThemeOptionsOf",
                  "canonicalReference": "@antv/g6!~ThemeOptionsOf:type"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "theme",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!Specification#transforms:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "transforms?: "
                },
                {
                  "kind": "Content",
                  "text": "string[] | {\n        type: string;\n        activeLifecycle: 'all' | "
                },
                {
                  "kind": "Reference",
                  "text": "DataLifecycleType",
                  "canonicalReference": "@antv/g6!~DataLifecycleType:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "DataLifecycleType",
                  "canonicalReference": "@antv/g6!~DataLifecycleType:type"
                },
                {
                  "kind": "Content",
                  "text": "[];\n        [param: string]: unknown;\n    }[] | "
                },
                {
                  "kind": "Reference",
                  "text": "TransformerFn",
                  "canonicalReference": "@antv/g6!~TransformerFn:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "transforms",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!Specification#transientCanvas:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "transientCanvas?: "
                },
                {
                  "kind": "Reference",
                  "text": "Canvas",
                  "canonicalReference": "@antv/g-lite!Canvas:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "transientCanvas",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!Specification#transientLabelCanvas:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "transientLabelCanvas?: "
                },
                {
                  "kind": "Reference",
                  "text": "Canvas",
                  "canonicalReference": "@antv/g-lite!Canvas:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "transientLabelCanvas",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!Specification#width:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "width?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "width",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!Specification#zoom:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "zoom?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "zoom",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@antv/g6!STDLayoutOptions:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type STDLayoutOptions = "
            },
            {
              "kind": "Reference",
              "text": "BuiltInLayoutOptions",
              "canonicalReference": "@antv/g6!~BuiltInLayoutOptions:type"
            },
            {
              "kind": "Content",
              "text": " & "
            },
            {
              "kind": "Reference",
              "text": "Animatable",
              "canonicalReference": "@antv/g6!~Animatable_2:type"
            },
            {
              "kind": "Content",
              "text": " & "
            },
            {
              "kind": "Reference",
              "text": "Workerized",
              "canonicalReference": "@antv/g6!~Workerized:type"
            },
            {
              "kind": "Content",
              "text": " & "
            },
            {
              "kind": "Reference",
              "text": "PresetLayoutOptions",
              "canonicalReference": "@antv/g6!~PresetLayoutOptions:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/layout.d.ts",
          "releaseTag": "Public",
          "name": "STDLayoutOptions",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@antv/g6!stdLib:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "stdLib: "
            },
            {
              "kind": "Content",
              "text": "{\n    markers: {\n        collapse: (x: any, y: any, r: any) => any[][];\n        expand: (x: any, y: any, r: any) => any[][];\n        upTriangle: (x: any, y: any, r: any) => any[][];\n        downTriangle: (x: any, y: any, r: any) => any[][];\n    };\n}"
            }
          ],
          "fileUrlPath": "lib/plugin/index.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "stdLib",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@antv/g6!ThemeSpecification:interface",
          "docComment": "/**\n * Theme specification with node / edge / combo palette and style mappers. And also canvas DOM CSS settings.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ThemeSpecification "
            }
          ],
          "fileUrlPath": "lib/types/theme.d.ts",
          "releaseTag": "Public",
          "name": "ThemeSpecification",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!ThemeSpecification#canvas:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "canvas?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [cssName: string]: unknown;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "canvas",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!ThemeSpecification#combo:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "combo?: "
                },
                {
                  "kind": "Reference",
                  "text": "ComboThemeSpecifications",
                  "canonicalReference": "@antv/g6!~ComboThemeSpecifications:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "combo",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!ThemeSpecification#edge:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "edge?: "
                },
                {
                  "kind": "Reference",
                  "text": "EdgeThemeSpecifications",
                  "canonicalReference": "@antv/g6!~EdgeThemeSpecifications:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "edge",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!ThemeSpecification#node:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "node?: "
                },
                {
                  "kind": "Reference",
                  "text": "NodeThemeSpecifications",
                  "canonicalReference": "@antv/g6!~NodeThemeSpecifications:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "node",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@antv/g6!ThemeSpecification#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@antv/g6!TreeData:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TreeData = "
            },
            {
              "kind": "Reference",
              "text": "ITreeData",
              "canonicalReference": "@antv/graphlib!TreeData:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "NodeUserModelData",
              "canonicalReference": "@antv/g6!~NodeUserModelData:interface"
            },
            {
              "kind": "Content",
              "text": "> | "
            },
            {
              "kind": "Reference",
              "text": "ITreeData",
              "canonicalReference": "@antv/graphlib!TreeData:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "NodeUserModelData",
              "canonicalReference": "@antv/g6!~NodeUserModelData:interface"
            },
            {
              "kind": "Content",
              "text": ">[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/data.d.ts",
          "releaseTag": "Public",
          "name": "TreeData",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@antv/g6!unregister:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "unregister: "
            },
            {
              "kind": "Content",
              "text": "any"
            }
          ],
          "fileUrlPath": "lib/plugin/register.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "unregister",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Namespace",
          "canonicalReference": "@antv/g6!Util:namespace",
          "docComment": "",
          "excerptTokens": [],
          "fileUrlPath": "lib/index.d.ts",
          "releaseTag": "None",
          "name": "Util",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Variable",
              "canonicalReference": "@antv/g6!Util.getArrowPath:var",
              "docComment": "/**\n * Get the path of different arrow types.\n *\n * @param type - Type of the arrow.\n *\n * @param width - The width of the arrow.\n *\n * @param height - The height of the arrow.\n *\n * @returns \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getArrowPath: "
                },
                {
                  "kind": "Content",
                  "text": "(type: "
                },
                {
                  "kind": "Reference",
                  "text": "ArrowType",
                  "canonicalReference": "@antv/g6!~ArrowType:type"
                },
                {
                  "kind": "Content",
                  "text": ", width: number, height: number) => string"
                }
              ],
              "fileUrlPath": "lib/utils/arrow.d.ts",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "getArrowPath",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@antv/g6!Util.getEdgesBetween:var",
              "docComment": "/**\n * Find the edges whose source and target are both in the ids.\n *\n * @param graph - graph instance\n *\n * @param ids - the end nodes/combos id list\n *\n * @returns id list of the edges meet the condition\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getEdgesBetween: "
                },
                {
                  "kind": "Content",
                  "text": "(graph: "
                },
                {
                  "kind": "Reference",
                  "text": "Graph",
                  "canonicalReference": "@antv/g6!Graph:class"
                },
                {
                  "kind": "Content",
                  "text": ", ids: "
                },
                {
                  "kind": "Reference",
                  "text": "ID",
                  "canonicalReference": "@antv/graphlib!ID:type"
                },
                {
                  "kind": "Content",
                  "text": "[]) => "
                },
                {
                  "kind": "Reference",
                  "text": "ID",
                  "canonicalReference": "@antv/graphlib!ID:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                }
              ],
              "fileUrlPath": "lib/utils/item.d.ts",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "getEdgesBetween",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@antv/g6!Util.graphComboTreeDfs:var",
              "docComment": "/**\n * Depth first search begin from nodes in g6 graph data.\n *\n * @param graph - G6 graph instance\n *\n * @param nodes - begin nodes\n *\n * @param fn - will be called while visiting each node\n *\n * @param mode - 'TB' - visit from top to bottom; 'BT' - visit from bottom to top;\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "graphComboTreeDfs: "
                },
                {
                  "kind": "Content",
                  "text": "(graph: "
                },
                {
                  "kind": "Reference",
                  "text": "Graph",
                  "canonicalReference": "@antv/g6!Graph:class"
                },
                {
                  "kind": "Content",
                  "text": ", nodes: "
                },
                {
                  "kind": "Reference",
                  "text": "NodeUserModel",
                  "canonicalReference": "@antv/g6!NodeUserModel:type"
                },
                {
                  "kind": "Content",
                  "text": "[], fn: any, mode?: 'TB' | 'BT') => void"
                }
              ],
              "fileUrlPath": "lib/utils/data.d.ts",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "graphComboTreeDfs",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@antv/g6!Util.graphCoreTreeDfs:var",
              "docComment": "/**\n * Depth first search begin from nodes in graphCore data.\n *\n * @param graphCore - graphlib data structure\n *\n * @param nodes - begin nodes\n *\n * @param fn - will be called while visiting each node\n *\n * @param mode - 'TB' - visit from top to bottom; 'BT' - visit from bottom to top;\n *\n * @param treeKey - \n *\n * @param stopFns - \n *\n * @param  - stopFns.stopBranchFn\n *\n * @param  - stopFns.stopAllFn\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "graphCoreTreeDfs: "
                },
                {
                  "kind": "Content",
                  "text": "(graphCore: "
                },
                {
                  "kind": "Reference",
                  "text": "GraphCore",
                  "canonicalReference": "@antv/g6!GraphCore:type"
                },
                {
                  "kind": "Content",
                  "text": ", nodes: "
                },
                {
                  "kind": "Reference",
                  "text": "NodeUserModel",
                  "canonicalReference": "@antv/g6!NodeUserModel:type"
                },
                {
                  "kind": "Content",
                  "text": "[], fn: any, mode?: 'TB' | 'BT', treeKey?: string, stopFns?: {\n    stopBranchFn?: (node: "
                },
                {
                  "kind": "Reference",
                  "text": "NodeUserModel",
                  "canonicalReference": "@antv/g6!NodeUserModel:type"
                },
                {
                  "kind": "Content",
                  "text": ") => boolean;\n    stopAllFn?: (node: "
                },
                {
                  "kind": "Reference",
                  "text": "NodeUserModel",
                  "canonicalReference": "@antv/g6!NodeUserModel:type"
                },
                {
                  "kind": "Content",
                  "text": ") => boolean;\n}) => void"
                }
              ],
              "fileUrlPath": "lib/utils/data.d.ts",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "graphCoreTreeDfs",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 10
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@antv/g6!Util.graphData2TreeData:var",
              "docComment": "/**\n * Transform graph data into tree graph data.\n *\n * @param nodeMap - This function will cache the nodes into nodeMap\n *\n * @param graphData - Graph data.\n *\n * @param propRootIds - Ids of root nodes. There should be at least one node for each connected component, or the first node in a connected component will be added to the roots array.\n *\n * @returns \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "graphData2TreeData: "
                },
                {
                  "kind": "Content",
                  "text": "(nodeMap: {\n    [id: string]: any;\n}, graphData: "
                },
                {
                  "kind": "Reference",
                  "text": "GraphData",
                  "canonicalReference": "@antv/g6!GraphData:interface"
                },
                {
                  "kind": "Content",
                  "text": ", propRootIds?: "
                },
                {
                  "kind": "Reference",
                  "text": "ID",
                  "canonicalReference": "@antv/graphlib!ID:type"
                },
                {
                  "kind": "Content",
                  "text": "[]) => any[]"
                }
              ],
              "fileUrlPath": "lib/utils/data.d.ts",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "graphData2TreeData",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@antv/g6!Util.isEncode:var",
              "docComment": "/**\n * Whether value is a Encode<T> type with fields and formatter function.\n *\n * @param value - \n *\n * @returns \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isEncode: "
                },
                {
                  "kind": "Content",
                  "text": "(value: any) => "
                },
                {
                  "kind": "Reference",
                  "text": "value",
                  "canonicalReference": "@antv/g6!~value"
                },
                {
                  "kind": "Content",
                  "text": " is "
                },
                {
                  "kind": "Reference",
                  "text": "Encode",
                  "canonicalReference": "@antv/g6!~Encode:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                }
              ],
              "fileUrlPath": "lib/utils/type.d.ts",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "isEncode",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@antv/g6!Util.isSucceed:var",
              "docComment": "/**\n * Whether the test succeed is a parent of the test parent.\n *\n * @param graph - G6 graph instance\n *\n * @param testParent - id of the node to be the parent\n *\n * @param parentId - id of the node to be the succeed\n *\n * @param testSucceed - \n *\n * @returns \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isSucceed: "
                },
                {
                  "kind": "Content",
                  "text": "(graph: any, testParent: any, testSucceed: any) => boolean"
                }
              ],
              "fileUrlPath": "lib/utils/data.d.ts",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "isSucceed",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@antv/g6!Util.mock:var",
              "docComment": "/**\n * mock graph data\n *\n * @param nodeCount - node count\n *\n * @returns \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mock: "
                },
                {
                  "kind": "Content",
                  "text": "(nodeCount: number) => {\n    circle: (centerId?: string) => {\n        nodes: {\n            id: string;\n            data: {};\n        }[];\n        edges: any[];\n    };\n    random: (ratio?: number) => {\n        nodes: {\n            id: string;\n            data: {};\n        }[];\n        edges: any[];\n    };\n}"
                }
              ],
              "fileUrlPath": "lib/utils/mock.d.ts",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "mock",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "Function",
              "canonicalReference": "@antv/g6!Util.transform:function(1)",
              "docComment": "/**\n * 根据 actions 来做 transform\n *\n * @param m - \n *\n * @param actions - \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export declare function transform(m: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": ", actions: "
                },
                {
                  "kind": "Content",
                  "text": "any[][]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileUrlPath": "lib/utils/matrix.d.ts",
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "m",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "actions",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "name": "transform"
            },
            {
              "kind": "Variable",
              "canonicalReference": "@antv/g6!Util.traverse:var",
              "docComment": "/**\n * Traverse a tree data from top to bottom.\n *\n * @param treeData - \n *\n * @param callback - \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "traverse: "
                },
                {
                  "kind": "Content",
                  "text": "(treeData: any, callback: any) => void"
                }
              ],
              "fileUrlPath": "lib/utils/data.d.ts",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "traverse",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@antv/g6!Util.traverseAncestors:var",
              "docComment": "/**\n * Traverse the ancestors from the begin nodes.\n *\n * @param graphCore - graphlib data structure\n *\n * @param nodes - begin nodes\n *\n * @param fn - will be called while visiting each node\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "traverseAncestors: "
                },
                {
                  "kind": "Content",
                  "text": "(graphCore: any, nodes: any, fn: any) => void"
                }
              ],
              "fileUrlPath": "lib/utils/data.d.ts",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "traverseAncestors",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@antv/g6!Util.traverseAncestorsAndSucceeds:var",
              "docComment": "/**\n * Depth first search begin from nodes in g6 graph data, and then search the ancestors from begin nodes.\n *\n * @param graph - G6 graph instance\n *\n * @param graphCore - graphlib data structure\n *\n * @param nodes - begin nodes\n *\n * @param fn - will be called while visiting each node\n *\n * @param mode - 'TB' - visit from top to bottom; 'BT' - visit from bottom to top;\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "traverseAncestorsAndSucceeds: "
                },
                {
                  "kind": "Content",
                  "text": "(graph: "
                },
                {
                  "kind": "Reference",
                  "text": "Graph",
                  "canonicalReference": "@antv/g6!Graph:class"
                },
                {
                  "kind": "Content",
                  "text": ", graphCore: "
                },
                {
                  "kind": "Reference",
                  "text": "GraphCore",
                  "canonicalReference": "@antv/g6!GraphCore:type"
                },
                {
                  "kind": "Content",
                  "text": ", nodes: "
                },
                {
                  "kind": "Reference",
                  "text": "NodeUserModel",
                  "canonicalReference": "@antv/g6!NodeUserModel:type"
                },
                {
                  "kind": "Content",
                  "text": "[], fn: any, mode?: 'TB' | 'BT') => void"
                }
              ],
              "fileUrlPath": "lib/utils/data.d.ts",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "traverseAncestorsAndSucceeds",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@antv/g6!Util.traverseGraphAncestors:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "traverseGraphAncestors: "
                },
                {
                  "kind": "Content",
                  "text": "(graph: "
                },
                {
                  "kind": "Reference",
                  "text": "Graph",
                  "canonicalReference": "@antv/g6!Graph:class"
                },
                {
                  "kind": "Content",
                  "text": ", nodes: "
                },
                {
                  "kind": "Reference",
                  "text": "NodeUserModel",
                  "canonicalReference": "@antv/g6!NodeUserModel:type"
                },
                {
                  "kind": "Content",
                  "text": "[], fn: any) => void"
                }
              ],
              "fileUrlPath": "lib/utils/data.d.ts",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "traverseGraphAncestors",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@antv/g6!Util.treeData2GraphData:var",
              "docComment": "/**\n * Transform tree graph data into graph data. Edges from parent-child structure.\n *\n * @param treeData - Tree structured data or an array of it.\n *\n * @returns Graph formatted data object with nodes, edges and combos.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "treeData2GraphData: "
                },
                {
                  "kind": "Content",
                  "text": "(treeData: "
                },
                {
                  "kind": "Reference",
                  "text": "TreeData",
                  "canonicalReference": "@antv/graphlib!TreeData:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "NodeUserModelData",
                  "canonicalReference": "@antv/g6!~NodeUserModelData:interface"
                },
                {
                  "kind": "Content",
                  "text": "> | "
                },
                {
                  "kind": "Reference",
                  "text": "TreeData",
                  "canonicalReference": "@antv/graphlib!TreeData:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "NodeUserModelData",
                  "canonicalReference": "@antv/g6!~NodeUserModelData:interface"
                },
                {
                  "kind": "Content",
                  "text": ">[]) => {\n    nodes: any[];\n    edges: any[];\n    combos: any[];\n}"
                }
              ],
              "fileUrlPath": "lib/utils/data.d.ts",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "treeData2GraphData",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 10
              }
            }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "@antv/g6!version:var",
          "docComment": "/**\n * Extend the graph class with std lib\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "version = "
            },
            {
              "kind": "Content",
              "text": "\"5.0.0\""
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "initializerTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "version",
          "variableTypeTokenRange": {
            "startIndex": 0,
            "endIndex": 0
          }
        }
      ]
    }
  ]
}
